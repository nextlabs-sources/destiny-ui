{
	"appName": "Control Center",
	"PS.CONFIRM": "Confirm",
	"PS.CANCEL": "Cancel",
	"PS.CLOSE": "Close",
	"PS.DEPLOY": "Deploy",
	"PS.DEACTIVATE": "Deactivate",
	"PS.OK": "OK",
	"PS.APPLY": "APPLY",
	"PS.Browse": "Browse",
	"PS.BROWSE": "BROWSE",
	"PS.CREATE": "CREATE",
	"PS.MOVE": "MOVE",
	"PS.NEW": "New",
	"PS.RENAME": "RENAME",
	"PS.IMPORT": "IMPORT",
	"PS.INCOMPLETE.FEATURE.MSG": "Coming soon",
	"CC.AddToFav": "Add this page to favorites",
	"PS.ERROR.MSG.500": "A server error occurred. Please try again later.",
	"PS.ERROR.MSG.403": "You do not have permission to access one or more policy modules. Please contact your administrator.",
	"PS.ERROR.MSG.6017": "The tags or folder in the policy{{componentName ? ' \"' + componentName + '\"' : ''}} do not comply with the rules in the delegated policies. Please contact your administrator.",
	"PS.ERROR.MSG.6018": "The tags or folder in the{{componentType ? (componentType == 'SUBJECT' ? ' subject' : (componentType == 'RESOURCE' ? ' resource' : (componentType == 'ACTION' ? ' action' : ''))) : ''}} component{{componentName ? ' \"' + componentName + '\"' : ''}} do not comply with the rules in the delegated policies. Please contact your administrator.",
	"PS.ERROR.MSG.6019": "The tags in the component type{{componentName ? ' \"' + componentName + '\"' : ''}} do not comply with the rules in the delegated policies. Please contact your administrator.",
	"PS.ERROR.MSG.6023": "Could not save changes due to invalid logging configuration.",
	"PS.ERROR.MSG.7009": "Cannot delete non-empty folder",
	"PS.ERROR.MSG.7010": "The destination folder cannot be a subfolder of the source folder",
	"PS.ERROR.MSG.7011": "This folder already contains another folder with the same name",
	"PS.ERROR.MSG.NETWORK.ERROR": "A network failure occurred. Please try again later.",
	"PS.import.sample.warning": "This will import sample policies to the system. Do you want to proceed?",
	"PS.import.sample.success": "{{ids.length > 1 ? 'Policies ' : 'Policy '}}imported successfully.",
	"PS.import.sample.duplicate": "The policies and/or component type already exist.",
	"dialog.notify.Details": "Details",
	"TAB.POLICIES": "Policies",
	"TAB.COMPONENTS": "Components",
	"TAB.RESOURCES": "Component Type",
	"TAB.DELEGATIONS": "Delegations",
	"TAB.COMPONENTS.RESOURCE": "Resource",
	"TAB.COMPONENTS.ACTION": "Action",
	"TAB.COMPONENTS.SUBJECT": "Subject",
	"TAB.CONFIGURATION": "Configuration",
	"TAB.CONFIGURATION.SYSTEM": "System",
	"TAB.CONFIGURATION.LOG": "Server Log",
	"TAB.CONFIGURATION.ENVIRONMENTS": "Environments",
	"TAB.Administration.loginConfig": "User Source",
	"TAB.TOOLS":"Tools",
	"TAB.TOOLS.VALIDATOR": "Policy Tester",
	"TAB.TOOLS.XACML_POLICY_MGMT": "XACML Policy Management",
	"TAB.TOOLS.ENROLLMENT": "Password Encryption",
	"TAB.TOOLS.SECURESTORE": "Certificate Management",
	"TAB.TOOLS.PDPPLUGIN": "PDP Plugin Management",
	"about.this.page": "About this page",
	"about.this.page.discard.all": "DISCARD ALL",
	"user.guide": "User Guide",
	"developer.resource": "Developer Resources",
	"searchform.customperiod.from": "From",
	"searchform.customperiod.to": "To",
	"common.validation.required.suffix": "is required",
	"common.validation.required": "{{field}} is required",
	"common.validation.pattern": "{{field}} should be in this pattern {{pattern}}",
	"subcomponent.label": "Subcomponent",
	"subpolicy.label": "Subpolicy",
	"history.revert": "REVERT TO THIS",
	"history.version": "VERSION",
	"history.version.on": "on",
	"history.version.lastUpdatedBy": "LAST UPDATED BY",
	"history.version.deployedBy": "DEPLOYED BY",
	"history.version.undeployedBy": "DEACTIVATED BY",
	"history.version.revertToThisBtn": "REVERT TO THIS",
	"folders.createFolder.title": "Create Folder",
	"folders.created.folder.notify": "The new folder has been created",
	"folders.deleted.folder.notify": "The {{length > 1 ? 'folders have' : 'folder has'}} been deleted",
	"folders.moveFolder.title": "Move to",
	"folders.renameFolder.title": "Rename Folder",
	"folders.folderView.title": "Folder View",
	"folders.listView.title": "List View",
	"folders.validation.error.folderName": "Invalid folder name.",
	"policylist.title.PolicyManagement": "Policy Management",
	"policylist.title.createPolicy": "ADD POLICY",
	"policylist.title.savedSearches": "Saved searches",
	"policylist.title.importPolicy": "Import Policies",
	"policylist.title.exportAllPolicy": "Export All Policies",
	"policylist.title.notifications": "Notifications",
	"policylist.title.FilterApplied": "FILTERS APPLIED",
	"policylist.title.LoadMore": "LOAD MORE",
	"policylist.label.Parent": "Parent",
	"policylist.label.SubPolicies": "Subpolicies",
	"policylist.label.HideSubPolicies": "Hide Subpolicies",
	"policylist.moved.notify": "Selected {{length > 1 ? 'items have' : 'item has'}} been moved",
	"policylist.title.Search": "SEARCH",
	"policylist.label.toBeDeployed": "TO BE DEPLOYED",
	"policylist.del.confirm": "Are you sure you want to delete the selected item(s)? This action cannot be undone.",
	"policylist.deleted.notify": "The {{length > 1 ? 'policies have' : 'policy has'}} been deleted",
	"policylist.deactivate.confirm": "Please confirm to deactivate.",
	"policylist.deactivate.notify": "Policy deactivated successfully.",
	"policylist.deploy.confirm": "Please confirm to deploy.",
	"policylist.deploy.notify": "The {{length > 1 ? 'policies are' : 'policy is'}} deployed. At the next heartbeat after the specified deployment start time, the {{length > 1 ? 'policies' : 'policy'}} will be sent to PDPs and will be available for evaluation.",
	"policylist.deployWithPush.notify": "The {{length > 1 ? 'policies are' : 'policy is'}} deployed. The {{length > 1 ? 'policies are' : 'policy is'}} sent to push-enabled PDPs and {{length > 1 ? 'are' : 'is'}} available for evaluation.",
	"policylist.deploy.notify.pushFailures": "Push request has failed for: ",
	"policylist.search.saved.notify": "Search criteria has been saved.",
	"policylist.export.option.sande": "SANDE",
	"policylist.export.option.plain": "PLAIN",
	"policylist.export.title": "Export Format",
	"policylist.export.sande.option.sande": "Digitally signed and encrypted",
	"policylist.export.sande.option.plain": "Plain text",
	"policylist.import": {
		"title": "Import policy",
		"file": "File",
		"policies.imported": "{{count}} {{count > 1 ? 'policies have been' : 'policy has been'}} imported",
		"components.imported": "{{count}} {{count > 1 ? 'components have been' : 'component has been'}} imported",
		"policymodels.imported": "{{count}} {{count > 1 ? 'component types have been' : 'component type has been'}} imported",
		"non_blocking_error": "Verify the policy/subject component data before saving or deploying the policy.",
		"mechanism": {
			"label": "Component type overwrite option",
			"partial": "Partial",
			"full": "Full"
		}, 
		"cleanup": {
			"label": "Clean-up option",
			"message": "Delete existing folders, component types, components and policies not in the importing file"
		}
	},
	"policylist.label.DeploymentTargets": "Deployment targets",
	"policylist.label.ManualDeployment": "Manual deployment",
	"policysearch.label.Status": "Status",
	"policysearch.label.AllStatus": "All Status",
	"policysearch.title.AllStatus": "All Statuses",
	"policysearch.label.Status.workflow": "Workflow Status",
	"policysearch.label.AllStatus.workflow": "All Workflow Status",
	"policysearch.title.AllStatus.workflow": "All Workflow Statuses",
	"policysearch.label.Effect": "Effect",
	"policysearch.label.AllEffect": "All Effects",
	"policysearch.title.AllEffect": "All",
	"policysearch.label.Tags": "Tags",
	"policysearch.label.AllTags": "All Tags",
	"policysearch.title.AllTags": "All",
	"policysearch.label.NoTags": "No Tags",
	"policysearch.title.NoTags": "None",
	"policysearch.label.ModifiedDate": "Modified Dates",
	"policysearch.label.AnyModifiedDate": "Any Date",
	"policysearch.label.More": "More",
	"policysearch.label.Save": "SAVE",
	"policysearch.label.Cancel": "CANCEL",
	"policysearch.label.Apply": "APPLY",
	"policysearch.text.placeholder": "Search for policies",
	"policysearch.searchsubpolicy.label.true": "Include subpolicies",
	"policysearch.searchsubpolicy.label.false": "Exclude subpolicies from search",
	"policysearch.label.saveSearch": "SAVE THIS SEARCH",
	"policysearch.label.clearSearch": "CLEAR FIELDS",
	"policysearch.label.sortby": "SORT BY",
	"policysearch.title.savesearch": "Save this search as",
	"xacmlPolicy.title.PolicyManagement": "XACML Policy Management",
	"xacmlPolicy.title.import.button": "IMPORT POLICY",
	"xacmlPolicy.title.import.dialog": "Import XACML Policy or Policy Set",
	"sysconfig.policy.workflow": "Policy Workflow",
	"sysconfig.console.policy.workflow.enable":"Enable",
	"policy.workflow.not.approved": "Policy is not approved",
	"policy.workflow.approved": "Policy is approved",
	"policy.workflow.amendment": "Policy is pushed back for amendment",
	"policy.workflow.confirm.approve": "Confirm approve policy",
	"policy.workflow.confirm.return": "Confirm return policy",
	"policy.workflow.need.approval": "Only approved policies state can be deployed",
	"policy.workflow.need.approve": "Policy is not approved",
	"policy.workflow.selected.unapproved": "You have selected policies that have not been approved",
	"policy.workflow.selected.only.approved": "Only approved policies can be deployed. ",
	"xacmlPolicyList": {
		"table": {
			"header": {
				"policyName": "Name",
				"documentType": "Document Type",
				"lastModified": "Last Modified"
			}
		},
		"empty.list.msg": "No XACML policy found",
		"export.confirm": "Are you sure you want to export the selected item(s)?",
		"del.confirm": "Are you sure you want to delete the selected item(s)? This action cannot be undone."
	},
	"policy.empty.list.msg": "No policies match the specified criteria.",
	"policy.deploy.title.SetDeploymentTarget": "Set Deployment Target",
	"policy.deploy.label.SelectedPolicies": "Selected Policies",
	"policy.deploy.label.DeployTo": "Deploy To",
	"policy.deploy.label.AllPolicyControllers": "All Policy Controllers",
	"policy.deploy.label.SelectedPolicyControllers": "Selected Policy Controllers",
	"policy.deploy.label.PolicyControllers": "Policy Controllers",
	"policy.deploy.label.Of": "of",
	"policy.deploy.label.Selected": "selected",
	"policy.deploy.label.HostName": "Host Name",
	"policy.deploy.search.PolicyController": "Search for Policy Controller",
	"policy.deploy.partially.msg": "{{policyList.length > 1 ? 'Policies' : 'Policy'}} {{policyList}} deployed. At the next scheduled heartbeat, policies will be sent to Policy Decision Points (PDPs) and made available for evaluation.",
	"policy.deploy.warning.universal": "The following policy/policies are not deployed:\n{{policyNameList}} \nThe cause may be:\n   - either policy/policies or subpolicies are empty\n   - components referenced by the policy/policies or subpolicies are empty or not deployed\n\n Do you still want to proceed to deploy the policy and related artifacts?",
	"policy.deploy.warning": "warning for policy {{policy.name}}:",
	"policy.deploy.warning.empty": "policy is empty",
	"policy.deploy.warning.subpolicy.empty": "{{policy.emptyPolicyNames.length > 1 ? 'subpolicies' : 'subpolicy'}} {{policy.emptyPolicyNames}} {{policy.emptyPolicyNames.length > 1 ? 'are' : 'is'}} empty",
	"policy.deploy.warning.components.empty": "{{policy.emptyComponents.length > 1 ? 'components' : 'component'}} {{policy.emptyComponents}} {{policy.emptyComponents.length > 1 ? 'are' : 'is'}} empty",
	"policy.deploy.warning.components.todeploy": "{{policy.componentsToDeploy.length > 1 ? 'components' : 'component'}} {{policy.componentsToDeploy}} would also be deployed.",
	"componentlist.title.ComponentManagement.Resource": "Resource Components",
	"componentlist.title.ComponentManagement.Action": "Action Components",
	"componentlist.title.ComponentManagement.Subject": "Subject Components",
	"componentlist.title.createComponent": "ADD COMPONENT",
	"componentlist.title.savedSearches": "Saved searches",
	"componentlist.title.importComponent": "Import Components",
	"componentlist.title.exportAllComponent": "Export All Components",
	"componentlist.title.FilterApplied": "FILTERS APPLIED",
	"componentlist.title.LoadMore": "LOAD MORE",
	"componentlist.label.Parent": "Included in",
	"componentlist.label.SubComponents": "Includes",
	"componentlist.label.HideSubComponents": "Hide - Subcomponents",
	"componentlist.title.Search": "SEARCH",
	"componentlist.label.toBeDeployed": "TO BE DEPLOYED",
	"componentlist.del.confirm": "Are you sure you want to delete the selected item(s)? This action cannot be undone.",
	"componentlist.deleted.notify": "Component deleted successfully.",
	"componentlist.deactivate.confirm": "Please confirm to deactivate.",
	"componentlist.deactivate.notify": "Component deactivated successfully.",
	"componentlist.empty.deploy.confirm": "This component is empty. Please confirm to deploy.",
	"componentlist.empty.bulkdeploy.confirm": "The following component{{namelist.length > 1 ? 's are': ' is'}} empty:{{namelist}}. Please confirm to deploy.",
	"componentlist.deploy.confirm": "Please confirm to deploy.",
	"componentlist.deploy.notify": "The {{length > 1 ? 'components are' : 'component is'}} deployed. At the next heartbeat after the specified deployment start time, the {{length > 1 ? 'components' : 'component'}} will be sent to PDPs and will be available for evaluation.",
	"componentlist.deployWithPush.notify": "The {{length > 1 ? 'components are' : 'component is'}} deployed. The {{length > 1 ? 'components are' : 'component is'}} sent to push-enabled PDPs and {{length > 1 ? 'are' : 'is'}} available for evaluation.",
	"componentlist.deploy.notify.pushFailures": "Push request has failed for: ",
	"componentlist.search.saved.notify": "Search criteria has been saved",
	"componentlist.moved.notify": "Selected {{length > 1 ? 'items have' : 'item has'}} been moved",
	"componentlist.notify.addingToEmptyComponent": "Subcomponent cannot be added to this component because it does not have a resource type",
	"component.deploy.warning.universal": "The following component(s) are not deployed:\n{{componentNameList}} \nThe cause may be - component(s) or subcomponent(s) are either empty or not deployed\n\n Do you still want to proceed to deploy the component and related artifacts?",
	"componentsearch.label.Status": "Status",
	"componentsearch.label.AllStatus": "All Status",
	"componentsearch.title.AllStatus": "All Statuses",
	"componentsearch.label.SubGroup": "Type",
	"componentsearch.label.AllSubGroup.Resource": "All Component Types",
	"componentsearch.title.AllSubGroup.Resource": "All Component Types",
	"componentsearch.label.AllSubGroup.Action": "All Component Types",
	"componentsearch.title.AllSubGroup.Action": "All Component Types",
	"componentsearch.label.AllSubGroup.Subject": "All",
	"componentsearch.title.AllSubGroup.Subject": "All",
	"componentsearch.label.Tags": "Tags",
	"componentsearch.label.AllTags": "All Tags",
	"componentsearch.title.AllTags": "All",
	"componentsearch.label.NoTags": "No Tags",
	"componentsearch.title.NoTags": "None",
	"componentsearch.label.ModifiedDate": "Modified Dates",
	"componentsearch.label.AnyModifiedDate": "Any Date",
	"componentsearch.label.More": "More",
	"componentsearch.label.Save": "SAVE",
	"componentsearch.label.Cancel": "CANCEL",
	"componentsearch.label.Apply": "APPLY",
	"componentsearch.text.placeholder": "Search for components",
	"componentsearch.searchsubcomponent.label.true": "Search for subcomponents",
	"componentsearch.searchsubcomponent.label.false": "Exclude subcomponents",
	"componentsearch.onlyEmptyComponents.label": "{{with == 'true' ? 'Search only empty' : 'Search all'}} components",
	"componentsearch.label.saveSearch": "SAVE THIS SEARCH",
	"componentsearch.label.clearSearch": "CLEAR FIELDS",
	"componentsearch.label.sortby": "SORT BY",
	"componentsearch.title.savesearch": "Save this search as",
	"component.empty.list.msg": "No components match the specified criteria.",
	"createpolicy.title.CreatePolicy": "Add Policy",
	"title.edit": "EDIT",
	"createpolicy.button.Discard": "RESET",
	"createpolicy.button.SavePolicy": "SAVE",
	"createpolicy.subtitle.PolicyInfo": "POLICY INFORMATION",
	"createpolicy.label.Name": "Name",
	"createpolicy.label.Folder": "Folder",
	"createpolicy.label.parent": "Parent Policy",
	"createpolicy.label.Description": "Description",
	"createpolicy.label.Tags": "Tags",
	"createpolicy.grammar.This": "This",
	"createpolicy.grammar.Policy": "policy",
	"createpolicy.grammar.With.Tags": "Tagged as",
	"createpolicy.grammar.Will": "Has this effect",
	"createpolicy.grammar.Subjects": "When these subjects",
	"createpolicy.grammar.subject.Recipient": "and recipient attributes",
	"createpolicy.grammar.subject.not.in.1st": "not",
	"createpolicy.grammar.subject.not.in": "and not",
	"createpolicy.grammar.subject.in": "and",
	"createpolicy.grammar.resource.concat": "and",
	"createpolicy.grammar.ToPerform": "Perform these actions",
	"createpolicy.grammar.On": "On these resources",
	"createpolicy.grammar.resources.TargetLocation": "moved, renamed or copied to",
	"createpolicy.grammar.Under": "Under these conditions",
	"createpolicy.grammar.IfAllowedPerform": "When actions are allowed",
	"createpolicy.grammar.OnDeniedPerform": "When actions are denied",
	"createpolicy.subtitle.PolicyEffect": "POLICY EFFECT AND SUBJECT COMPONENTS",
	"createpolicy.label.PolicyEffect": "Policy Effect",
	"createpolicy.label.policy.status": "POLICY STATUS",
	"createpolicy.label.SubjectComponents": "Subject Components",
	"createpolicy.label.AndRecipient": "And Recipient",
	"createpolicy.effect.true": "Allow",
	"createpolicy.effect.false": "Deny",
	"createpolicy.subtitle.ActionComponents": "ACTION COMPONENTS",
	"createpolicy.subtitle.ResourceComponents": "RESOURCE COMPONENTS",
	"createpolicy.subtitle.AdvancedConditions": "ADVANCED CONDITIONS",
	"createpolicy.subtitle.Obligations": "OBLIGATION",
	"createpolicy.subtitle.DeploymentTargets": "DEPLOYMENT TARGETS",
	"createpolicy.label.ActionComponents": "Action Components",
	"createpolicy.label.ResourceComponents": "Resource Components",
	"createpolicy.label.TargetLocation": "Target Location (Moved, Renamed, or Copied)",
	"createpolicy.active.true": "Active",
	"createpolicy.active.false": "Inactive",
	"createpolicy.policy.status.active": "Active",
	"createpolicy.policy.status.inactive": "Inactive",
	"createpolicy.grammar.placeholder.PolicyName": "Policy Name",
	"createpolicy.grammar.placeholder.PolicyEffect": "Policy effect",
	"createpolicy.grammar.placeholder.SubjectComponents": "Subject Components",
	"createpolicy.grammar.placeholder.ActionComponents": "Action Components",
	"createpolicy.grammar.placeholder.ResourceComponents": "Resource Components",
	"createpolicy.grammar.placeholder.Conditions": "Advanced Conditions",
	"createpolicy.grammar.placeholder.Obligations": "Obligations",
	"createpolicy.input.placeholder.NameOfPolicy": "The name of the policy",
	"createpolicy.input.placeholder.tags": "Add policy tags",
	"createpolicy.input.placeholder.DescriptionOfPolicy": "A brief description of the policy",
	"createpolicy.input.placeholder.subjectCompts": "Add subject components",
	"createpolicy.input.placeholder.actionCompts": "Add action components",
	"createpolicy.input.placeholder.resourceCompts": "Add resource components",
	"createpolicy.input.placeholder.Expression": "Enter a valid condition expression or choose an attribute to build an expression. Click help for examples.",
	"createpolicy.input.placeholder.parameter": "Enter a valid parameter value or choose an attribute to build a parameter value.",
	"createpolicy.input.placeholder.parameter.readonly": "This parameter is not editable.",
	"createpolicy.input.placeholder.parameter.email": "Enter a valid email address.",
	"createpolicy.input.placeholder.SearchForAvailableEnforcers": "Search for Available Enforcers",
	"createpolicy.subjectComptAttr.true": "In ",
	"createpolicy.subjectComptAttr.false": "Not In ",
	"createpolicy.label.Expression": "Expression",
	"createpolicy.label.onAllow": "On Allow perform the following:",
	"createpolicy.label.onDeny": "On Deny perform the following:",
	"createpolicy.input.placeholder.PrintOverlay.Message": "Ex. Confidential",
	"createpolicy.label.UserAlert": "User Alert",
	"createpolicy.label.PrintOverlay": "Print Overlay",
	"createpolicy.label.Message": "Message",
	"createpolicy.label.FontSize": "Font Size",
	"createpolicy.label.Placement": "Placement",
	"createpolicy.label.Direction": "Direction",
	"createpolicy.label.ViewOverlay": "View Overlay",
	"createpolicy.label.Log": "Log",
	"createpolicy.label.Email": "Email",
	"createpolicy.label.AutoDeployment": "Auto Deployment",
	"createpolicy.label.ManualDeployment": "Manual Deployment",
	"createpolicy.button.validate": "VALIDATE",
	"createpolicy.validation.error": "Invalid Expression",
	"createpolicy.validation.empty.deployment.targets": "Deployment targets cannot be empty when Manual Deployment selected",
	"createpolicy.validation.error.time": "Start time must be before the End time",
	"createpolicy.new.resource": "New Resource",
	"createpolicy.new.subject": "New Subject",
	"createpolicy.new.action": "New Action",
	"createpolicy.search.subject": "Search for Subject",
	"createpolicy.search.resource": "Search for Resource",
	"createpolicy.search.action": "Search for Action",
	"createpolicy.discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the policy list?",
	"common.discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them?",
	"createpolicy.reset.confirm": "Are you sure you want to discard changes and reset the form?",
	"createpolicy.added.notify": "The policy has been saved.",
	"createpolicy.saved.notify": "The policy has been saved",
	"createpolicy.cloned.notify": "The policy has been cloned.",
	"createpolicy.policy.name.validation.maxLength": "Policy name cannot exceed 255 characters",
	"createpolicy.policy.name.validation.required": "Policy name is mandatory",
	"createpolicy.policy.name.validation.pattern": "Policy name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createpolicy.subject.validation.required": "Subject is mandatory",
	"createpolicy.action.validation.required": "Action is mandatory",
	"createpolicy.resource.validation.required": "Resource is mandatory",
	"createpolicy.button.SaveAndDeploy": "SAVE & DEPLOY",
	"createpolicy.button.Deploy": "DEPLOY",
	"createpolicy.history.deployedThePolicy": "deployed the policy.",
	"createpolicy.history.undeployedThePolicy": "deactivated the policy.",
	"createpolicy.history.createdThePolicy": "created the policy.",
	"createpolicy.version.contain.desc": "Has description",
	"createpolicy.version.contain.policy.eff.valid.from": "Valid from",
	"createpolicy.version.contain.policy.eff.valid.to": "to",
	"createpolicy.version.contain.policy.eff.valid.on": "on",
	"createpolicy.version.contain.policy.eff.valid.starting": "Starting from",
	"createpolicy.version.contain.policy.deployment.target": "Deployed to",
	"createpolicy.version.contain.connection.type": "With connection type as",
	"createpolicy.version.contain.heartbeat": "Heartbeat set to",
	"createpolicy.version.contain.tags": "Has tags",
	"createpolicy.version.include.sub": "Includes components",
	"createpolicy.version.and.will": "Will do the following",
	"createpolicy.version.will": "Will do the following",
	"createpolicy.version.users": "When users",
	"createpolicy.revert.confirm": "Are you sure to revert to this version?",
	"createpolicy.reverted.notify": "Reverted to the previous version successfully.",
	"createpolicy.addsubject.btn": "ADD CONDITION",
	"createpolicy.addresource.btn": "ADD CONDITION",
	"createpolicy.add.parameter.btn": "ADD ANOTHER PARAMETER SET",
	"createpolicy.policy.unavailable": "Policy not available",
	"createpolicy.recur.by.date.part1": "Day",
	"createpolicy.recur.by.date.part2": "of every month",
	"createpolicy.tab.summary": "Policy summary",
	"createpolicy.tab.hierarchy": "Policy hierarchy",
	"createpolicy.tab.history": "Policy history",
	"createpolicy.edit.component.confirm": "You will be redirected to the component edit page, and unsaved changes will be discarded.",
	"createpolicy.edit.subject.enableRecipientWhenTargetLocationEnabled": "Cannot enable recipient when target location enabled",
	"createpolicy.edit.subject.enableTargetLocationWhenRecipientEnabled": "Cannot enable target location when recipient enabled",
	"createpolicy.policy.eff.days.sun": "SUN",
	"createpolicy.policy.eff.days.mon": "MON",
	"createpolicy.policy.eff.days.tue": "TUE",
	"createpolicy.policy.eff.days.wed": "WED",
	"createpolicy.policy.eff.days.thu": "THU",
	"createpolicy.policy.eff.days.fri": "FRI",
	"createpolicy.policy.eff.days.sat": "SAT",
	"createComponent.title.CreateComponent": "Add Component",
	"createComponent.button.Discard": "RESET",
	"createComponent.button.Preview": "PREVIEW",
	"createComponent.button.SaveComponent": "SAVE",
	"createComponent.button.SaveAndDeployComponent": "SAVE & DEPLOY",
	"createComponent.button.DeployComponent": "DEPLOY",
	"createComponent.emptySubComp": "Some subcomponents have been deleted and could not be loaded.",
	"createComponent.grammar.This": "This",
	"createComponent.grammar.Component": "component",
	"createComponent.grammar.with.tags": "Tagged as",
	"createComponent.grammar.Of": "Is defined by this resource type",
	"createComponent.grammar.With": "Has these properties",
	"createComponent.grammar.With.Members": "With these members",
	"createComponent.grammar.With.Action": "Has these actions",
	"createComponent.grammar.Contains": "Includes these components",
	"createComponent.subtitle.ComponentInfo": "COMPONENT INFORMATION",
	"createComponent.label.Name": "Name",
	"createComponent.label.parent": "Included In",
	"createComponent.label.Description": "Description",
	"createComponent.label.Tags": "Tags",
	"createComponent.subtitle.TypeOfComponent": "TYPE OF COMPONENT",
	"createComponent.subtitle.Conditions": "CONDITIONS",
	"createComponent.button.Conditions": "ADD CONDITION",
	"createComponent.subtitle.Actions": "ACTIONS",
	"createComponent.subtitle.Members": "MEMBERS",
	"createComponent.button.Members": "ADD MEMBER CONDITION",
	"createComponent.button.Members.prefix": "ADD ",
	"createComponent.button.Members.suffix": " OR GROUPS",
	"createComponent.button.Members.lookup": "LOOKUP",
	"createComponent.search.Members.prefix": "Search for ",
	"createComponent.search.Members.suffix": " or groups",
	"createComponent.search.Members": "Search for members",
	"createComponent.subtitle.IncludeSubComponents": "INCLUDE SUBCOMPONENTS",
	"createComponent.label.ComponentType": "Component Type",
	"createComponent.label.PolicyModelType.RESOURCE": "Resource Type",
	"createComponent.label.PolicyModelType.SUBJECT": "Subject Type",
	"createComponent.label.SubComponents": "Subcomponents",
	"createComponent.actions": "Actions:",
	"createComponent.subcomponents": "Subcomponents:",
	"createComponent.label.NoActionSelected": "No action selected",
	"createComponent.no.subcomponent.match": "No matching subcomponents",
	"createComponent.grammar.placeholder.ComponentName": "Component Name",
	"createComponent.grammar.placeholder.Type": "Type",
	"createComponent.grammar.placeholder.Conditions": "Conditions",
	"createComponent.grammar.placeholder.Members": "Members",
	"createComponent.grammar.placeholder.Actions": "Actions",
	"createComponent.grammar.placeholder.Components": "Components",
	"createComponent.input.placeholder.NameOfCompoent": "The name of the component",
	"createComponent.input.placeholder.DescriptionOfCompoent": "A brief description of the component",
	"createComponent.input.placeholder.tags": "Tags that classify the component",
	"createComponent.dropdown.label.ResourceType": "type",
	"createComponent.input.placeholder.subResourceCompts": "Subcomponents to include",
	"createComponent.input.placeholder.Value": "Value",
	"createComponent.input.placeholder.AddValues": "Add Values",
	"createComponent.label.ResourceType.Subject.user": "User",
	"createComponent.confirm.change.resourcetype.Resource": "All selected conditions and subcomponents will be removed. Please confirm to proceed.",
	"createComponent.confirm.change.resourcetype.Subject": "All selected conditions, members and subcomponents will be removed. Please confirm to proceed.",
	"createComponent.confirm.change.resourcetype.Action": "All selected actions and subcomponents will be removed. Please confirm to proceed.",
	"createComponent.discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the component list?",
	"createComponent.reset.confirm": "Are you sure you want to discard changes and reset the form?",
	"createComponent.added.notify": "The component has been saved.",
	"createComponent.saved.notify": "The component has been saved.",
	"createComponent.savedAndDeploy.notify": "The component is deployed. At the next heartbeat after the specified deployment start time, the component will be sent to the PDPs and will be made available for evaluation.",
	"createComponent.savedAndDeployWithPush.notify": "The component is deployed. The component is sent to push-enabled PDPs and is available for evaluation.",
	"createComponent.savedAndDeployWithPush.notify.pushFailures": "Push request has failed for: ",
	"createComponent.cloned.notify": "The component has been cloned.",
	"createComponent.new.subcomponent": "New Subcomponent",
	"createComponent.search.component": "Search for subcomponent",
	"createComponent.history.deployedTheComponent": "deployed the component.",
	"createComponent.history.undeployedTheComponent": "deactivated the component.",
	"createComponent.history.createdTheComponent": "created the component.",
	"createComponent.revert.confirm": "Are you sure you want to revert to this version?",
	"createComponent.reverted.notify": "Reverted to previous version successfully.",
	"createComponent.label.status": "COMPONENT STATUS",
	"createComponent.policymodel.not.found": "Cannot find the resource type referenced by the component. Please select a different resource type.",
	"createComponent.policymodel.not.selected": "No resource type selected.",
	"createcomponent.component.unavailable": "Component not available.",
	"createcomponent.tab.summary": "Component summary",
	"createcomponent.tab.hierarchy": "Component hierarchy",
	"createcomponent.tab.history": "Component history",
	"component.status.active": "Active",
	"component.status.inactive": "Inactive",
	"component.name.validation.maxLength": "Component name cannot exceed 255 characters",
	"component.name.validation.required": "Add a name for the component.",
	"component.name.validation.pattern": "Component name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"component.condition.value.validation.required": "Add a condition value.",
	"component.desription.validation.maxLength": "Component description cannot exceed 4000 characters",
	"component.condition.value.validation.pattern": "Add a valid condition value.",
	"component.preview": "This component includes {{length}} {{type}}{{length > 1 ? 's' : ''}}:",
	"component.preview.no.members": "No preview available.",
	"component.subject.type.not.selected": "Please select a Subject Type.",
	"component.member.preview.domain.name": "Domain name:",
	"component.member.preview.group": "This group includes {{length}} {{type}}{{length > 1 ? 's' : ''}}:",
	"component.member.preview.group.no.members": "This group does not have any members.",
	"component.member.preview.find.placeholder": "Find",
	"component.member.preview.find.searchResult": "{{count}} result{{count > 1 ? 's' : ''}} found for \"{{searchText}}\"",
	"component.member.preview.find.searchResult.no.data": "No results found for \"{{searchText}}\"",
	"component.member.preview.find.clear": "Clear search results",
	"resourcelist.title.ResourceManagement": "Component Types",
	"resourcelist.title.createResource": "ADD RESOURCE TYPE",
	"resourcelist.title.savedSearches": "Saved searches",
	"resourcelist.title.importResource": "Import Resource Types",
	"resourcelist.notify.resource.imported": "Resource Types have been imported successfully.",
	"resourcelist.title.exportAllResource": "Export All Resource Types",
	"resourcelist.title.FilterApplied": "FILTERS APPLIED",
	"resourcelist.title.LoadMore": "LOAD MORE",
	"resourcelist.label.Parent": "Included in",
	"resourcelist.label.SubResources": "Includes",
	"resourcelist.label.HideSubResources": "Hide - Sub Resources",
	"resourcelist.title.Search": "SEARCH",
	"resourcelist.del.confirm": "Are you sure you want to delete the selected item? This action cannot be undone.",
	"resourcelist.deleted.notify": "The Resource Type has been deleted.",
	"resourcelist.search.saved.notify": "The search criteria has been saved.",
	"resourcesearch.label.Status": "Status",
	"resourcesearch.label.AllStatus": "All Status",
	"resourcesearch.title.AllStatus": "All Statuses",
	"resourcesearch.label.Effect": "Effect",
	"resourcesearch.label.AllEffect": "All Effects",
	"resourcesearch.title.AllEffect": "All",
	"resourcesearch.label.Tags": "Tags",
	"resourcesearch.label.Type": "Type",
	"resourcesearch.label.AllTags": "All Tags",
	"resourcesearch.title.AllTags": "All",
	"resourcesearch.label.NoTags": "No Tags",
	"resourcesearch.title.NoTags": "None",
	"resourcesearch.label.AllTypes": "All Types",
	"resourcesearch.title.AllTypes": "All",
	"resourcesearch.label.ModifiedDate": "Modified Dates",
	"resourcesearch.label.AnyModifiedDate": "Any Date",
	"resourcesearch.label.More": "More",
	"resourcesearch.label.Save": "Import",
	"resourcesearch.label.Cancel": "CANCEL",
	"resourcesearch.label.Apply": "APPLY",
	"resourcesearch.text.placeholder": "Search for resources",
	"resourcesearch.label.saveSearch": "SAVE THIS SEARCH",
	"resourcesearch.label.clearSearch": "CLEAR FIELDS",
	"resourcesearch.label.sortby": "SORT BY",
	"resourcesearch.title.savesearch": "Save this search as",
	"createResource.button.Discard": "RESET",
	"createResource.button.SavePolicyModel": "Save Resource",
	"createResource.subtitle.ResourceInfo": "RESOURCE INFO",
	"createResource.title.CreatePolicyModel": "Add Resource Type",
	"createResource.button.SavePolicyModel.RESOURCE": "SAVE",
	"createResource.button.SavePolicyModel.SUBJECT": "SAVE",
	"createResource.subtitle.PolicyModelInfo.RESOURCE": "RESOURCE TYPE INFORMATION",
	"createResource.subtitle.PolicyModelInfo.SUBJECT": "SUBJECT TYPE INFORMATION",
	"createResource.grammar.This": "This",
	"createResource.grammar.With": "With",
	"createResource.grammar.With.Tags": "Tagged as",
	"Has these attributes": "Has these attributes",
	"createResource.grammar.placeholder.policyModelType.RESOURCE": "resource type",
	"createResource.grammar.placeholder.policyModelType.SUBJECT": "subject type",
	"createResource.grammar.placeholder.Conditions": "attributes",
	"createResource.grammar.placeholder.Actions": "actions",
	"createResource.grammar.placeholder.Obligations": "obligations",
	"createResource.label.Name": "Name",
	"createResource.label.ShortName": "Short Name",
	"createResource.label.Description": "Description",
	"createResource.label.Tags": "Tags",
	"createResource.input.placeholder.NameOfResourceType": "The name of the resource type",
	"createResource.input.placeholder.ShortNameOfResourceType": "The short name of resource type",
	"createResource.input.placeholder.Description": "A brief description of the resource type",
	"createResource.input.placeholder.Tags": "Tags that classify the resource type",
	"createResource.subtitle.Attributes": "ATTRIBUTES",
	"createResource.subtitle.EnrollmentAttributes": "PRE-SEEDED ATTRIBUTES",
	"createResource.label.AttributeName": "Attribute Name",
	"createResource.label.DataType": "Data Type",
	"createResource.label.RegularExpression": "Regular Expression",
	"createResource.label.Operators": "Operators",
	"createResource.subtitle.Actions": "ACTIONS",
	"createResource.subtitle.Action.name": "Action Name",
	"createResource.subtitle.Action.sname": "Short Name",
	"createResource.subtitle.Obligations": "OBLIGATIONS",
	"createResource.label.ObligationName": "Obligation Name",
	"createResource.label.ObligationSName": "Short Name",
	"createResource.label.Parameters": "PARAMETERS",
	"createResource.label.sName": "Short Name",
	"createResource.label.Type": "Type",
	"createResource.label.DefaultValue": "Default Value",
	"createResource.label.Hidden": "Hidden",
	"createResource.label.Editable": "Editable",
	"createResource.label.Mandatory": "Mandatory",
	"createResource.label.ListValue": "List value",
	"createResource.label.ListValue.placeholder": "Comma-separated list values",
	"createResource.label.AllOperators": "All Operators",
	"createResource.label.placeholder.Operators": "Operators",
	"createResource.added.notify": "The resource type has been added successfully.",
	"createResource.saved.notify.RESOURCE": "The resource type has been saved.",
	"createResource.saved.notify.SUBJECT": "The subject type has been saved.",
	"createResource.cloned.notify.RESOURCE": "The resource type has been cloned.\nPlease add a short name by editing the resource type to make it available for use.",
	"createResource.discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the component type list?",
	"createResource.reset.confirm": "Are you sure you want to discard changes and reset the form?",
	"search.del.confirm": "Are you sure you want to delete this saved search?",
	"search.deleted.notify": "The selected search has been deleted.",
	"login.welcome": "Welcome to the Nextlabs Control Center",
	"createResource.shortname.validation.pattern": "Short name must start with alphabetic or ASCII characters. They cannot contain colons(:).",
	"createResource.shortname.reservedKeyword": "is a reserved keyword. Please enter a different short name.",
	"createResource.shortname.alphanumeric.validation.pattern": "Short names must begin with a letter (upper or lower case) followed by letters (a-z), numbers (0-9), or underscores(_).",
	"createResource.resourceName.validation.required": "Resource name is mandatory.",
	"createResource.resourceName.validation.maxLength": "Resource name cannot exceed 255 characters.",
	"createResource.resourceName.validation.pattern": "Resource name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createResource.resourceSName.validation.required": "Short name is mandatory.",
	"createResource.resourceSName.validation.maxLength": "Short name cannot exceed 255 characters.",
	"createResource.resourceTypeDesc.validation.maxLength": "Descriptions cannot exceed 4000 characters.",
	"createResource.attributeName.validation.required": "Attribute name is mandatory.",
	"createResource.attributeName.validation.maxLength": "Attribute name cannot exceed 255 characters.",
	"createResource.attributeName.validation.pattern": "Attribute name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createResource.attributeSName.validation.required": "Attribute short name is mandatory.",
	"createResource.attributeSName.validation.maxLength": "Attribute short name cannot exceed 255 characters.",
	"createResource.attributeSName.validation.invalidSname": "The attribute short name is invalid",
	"createResource.attributeOperators.validation.required": "Attribute operator is mandatory",
	"createResource.action.name.validation.required": "Action name is mandatory",
	"createResource.action.name.validation.maxLength": "Action name cannot exceed 255 characters.",
	"createResource.action.name.validation.pattern": "Action name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createResource.action.sname.validation.required": "Action short name is mandatory",
	"createResource.action.sname.validation.maxLength": "Action short name cannot exceed 255 characters.",
	"createResource.action.sname.validation.invalidSname": "The action short name is invalid",
	"createResource.obligation.name.validation.required": "Obligation name is mandatory",
	"createResource.obligation.name.validation.maxLength": "Obligation name cannot exceed 255 characters.",
	"createResource.obligation.name.validation.pattern": "Obligation name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createResource.obligation.sname.validation.required": "Obligation short name is mandatory",
	"createResource.obligation.sname.validation.reserved": "Obligation short name '{{sname}}' is reserved by the system",
	"createResource.obligation.sname.validation.maxLength": "Obligation short name cannot exceed 255 characters.",
	"createResource.obligation.sname.validation.invalidSname": "The obligation short name is invalid",
	"createResource.obligation.attr.name.validation.required": "Parameter name is mandatory",
	"createResource.obligation.attr.name.validation.maxLength": "Parameter name cannot exceed 255 characters.",
	"createResource.obligation.attr.name.validation.pattern": "Parameter name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"createResource.obligation.attr.sname.validation.required": "Parameter short name is mandatory",
	"createResource.obligation.attr.sname.validation.maxLength": "Parameter short name cannot exceed 255 characters.",
	"createResource.obligation.attr.sname.validation.invalidSname": "Obligation parameter short name is invalid",
	"createResource.obligation.attr.listvalue.validation.required": "Parameter value is mandatory",
	"createResource.obligation.attr.listvalue.defaultvalue.invalid": "Parameter default value is invalid",
	"createResource.obligation.attr.listvalue.validation.maxLength": "Parameter values cannot exceed 255 characters.",
	"createResource.obligation.attr.defaultvalue.validation.required": "A default value is required if the parameter is hidden or not editable but mandatory",
	"createResource.obligation.attr.defaultvalue.validation.maxLength": "Parameter default values cannot exceed {{length}} characters.",
	"createresource.resource.unavailable": "Component Type not available.",
	"resourceType.empty.list.msg": "No component types match the specified criteria.",
	"resourceType.create.msg": "Create Component Type",
	"Duplicate attribute short name found": "Duplicate attribute short name '{{sname}}' found",
	"Duplicate attribute short name in preseeded found": "Attribute short name '{{sname}}' is a reserved keyword",
	"Duplicate action short name found": "Duplicate action short name '{{sname}}' found",
	"Duplicate obligation short name found": "Duplicate obligation short name '{{sname}}' found",
	"Duplicate parameter short name found in the obligation": "Duplicate parameter short name '{{sname}}' found in the obligation : {{obligation}}",
	"deployment.status.deployed": "Deployed",
	"deployment.status.inactive": "Inactive",
	"deployment.status.deploymentPending": "Deployment Pending",
	"deployment.status.deploymentPendingPriorDeployed": "Deployment Pending (An earlier version is deployed)",
	"deployment.title.deploy": "Deploy",
	"deployment.title.deploymentStartTime": "Deployment Start Time",
	"deployment.title.deploymentContents": "Deployment Contents",
	"deployment.subtitle.selectedPolicies": "Selected policies",
	"deployment.subtitle.selectedComponents": "Selected components",
	"deployment.subtitle.requiredComponents": "Components never deployed",
	"deployment.subtitle.optionalComponents": "Modified components",
	"deployment.subtitle.requiredPolicies": "Policies never deployed",
	"deployment.subtitle.optionalPolicies": "Modified policies",
	"deployment.label.deployImmediately": "Deploy immediately",
	"deployment.label.specifyDeploymentStartTime": "Specify",
	"deployment.validation.specifyDateAndTime": "Please specify the policy deployment start date and time",
	"deployment.msg.save.policy": "The policy is saved.",
	"deployment.msg.save.component": "The component is saved.",
	"deployment.msg.deploy.confirm": "Do you want to proceed with deployment?",
	"delegation.create.component.type.tags": "Create Component Type Tags",
	"delegation.view.component.type": "View Component Type",
	"delegation.create.component.type": "Create Component Type",
	"delegation.edit.component.type": "Edit Component Type",
	"delegation.delete.component.type": "Delete Component Type",
	"delegation.grammar.component.type": "Policy Studio - Component Type",
	"createenvironment.environment.port.validation.number": "Port must be only numbers",
	"createenvironment.environment.name.validation.pattern": "Environment name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
	"environmentList.title.environmentManager":"Environment Manager",
	"environmentList.title.createEnvironment":"Add Environment",
	"environmentList.title.editEnvironment":"Edit Environment",
	"createEnvironment.title.destination":"DESTINATION ENVIRONMENT DETAILS",
	"environment.migrate.mechanism.label": "Overwrite option",
	"environment.migrate.mechanism.partial": "Partial",
	"environment.migrate.mechanism.full": "Full",
	"environment.label.hostname": "Hostname",
	"environment.label.environment": "Environment",
	"environment.no.data.mask": "There are no environment available",
	"environment.label.sortby": "SORT BY",
	"environment.migrate.option.label" : "Move policy to",
	"createEnvironment.discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the environment list?",
	"createEnvironment.title.name":"Name",
	"createEnvironment.title.hostname":"Hostname",
	"createEnvironment.title.port":"Port",
	"createEnvironment.title.username":"Username",
	"createEnvironment.title.password":"Password",
	"createEnvironment.title.oidc":"OIDC Client ID",
	"createEnvironment.title.ssl":"SSL Certificate",
	"createEnvironment.button.browse":"BROWSE",
	"createEnvironment.button.test.connection":"TEST CONNECTION",
	"createEnvironment.button.test.connection.again":"TEST AGAIN",
	"createEnvironment.environment.name.validation.maxLength": "Environment name cannot exceed 255 characters",
	"createEnvironment.environment.name.validation.required": "Environment name is mandatory",
	"createEnvironment.environment.hostname.validation.maxLength": "Environment hostname cannot exceed 255 characters",
	"createEnvironment.environment.hostname.validation.required": "Environment hostname is mandatory",
	"createEnvironment.environment.port.validation.maxLength": "Environment port cannot exceed 5 characters",
	"createEnvironment.environment.port.validation.required": "Environment port is mandatory",
	"createEnvironment.environment.username.validation.maxLength": "Environment username cannot exceed 255 characters",
	"createEnvironment.environment.username.validation.required": "Environment username is mandatory",
	"createEnvironment.environment.password.validation.maxLength": "Environment password cannot exceed 255 characters",
	"createEnvironment.environment.password.validation.required": "Environment password is mandatory",
	"createEnvironment.environment.password.validation.pattern": "The password does not meet complexity requirements",
	"createEnvironment.environment.clientId.validation.required": "Environment Client ID is mandatory",
	"createEnvironment.button.Discard": "RESET",
	"createEnvironment.button.SaveEnvironment": "SAVE",
	"migration.policy.migrate": "Move policy to other environment",
	"migration.policy.migrate.success": "Policy Migration Successful",
	"createEnvironment.environment.connectionTest.success": "Connection Tested Successfully",
	"createEnvironment.environment.add.success": "Environment Added Successfully",
	"createEnvironment.environment.modify.success": "Environment Modified Successfully",
	"enrollment.create":"Create Enrollment",
	"enrollment.save.enroll":"Enroll",
	"enrollment.details":"ENROLLMENT DETAILS",
	"enrollment.name": "Enrollment Name",
	"enrollment.optional": "(Optional)",
	"enrollment.source": "Source of Information/record",
	"enrollment.connection.details": "CONNECTION DETAILS",
	"enrollment.connection.server.url.placeholder": "The connection server URL",
	"enrollment.connection.server.port.placeholder": "The port number",
	"enrollment.connection.server.username.placeholder": "The username of the server",
	"enrollment.connection.server.password.placeholder": "The password of the server",
	"enrollment.connection.test": "TEST CONNECTION",
	"enrollment.connection.root": "Root",
	"enrollment.connection.placeholder": "The root details",
	"enrollment.connection.add.root": "ADD ROOT",
	"enrollment.connection.paging": "Paging Control Support",
	"enrollment.connection.dirsync": "DirSync Control Support",
	"enrollment.connection.auto": "Auto Sync",
	"enrollment.definition.details": "DEFINITION DETAILS",
	"enrollment.definition.details.global.id": "Global Unique ID",
	"enrollment.definition.details.global.id.placeholder": "The global unique ID",
	"enrollment.definition.details.other.requirements": "Other requirements",
	"enrollment.definition.details.other.requirements.placeholder": "The additional requirements",
	"enrollment.definition.details.store.missing.attributes": "Store missing attributes",
	"enrollment.definition.enroll.entities": "Entities to enroll:",
	"enrollment.definition.sync": "SYNC", 
	"enrollment.definition.attributes": "ATTRIBUTES", 
	"enrollment.ldif.schedule.sync": "Schedule a sync",
	"enrollment.ldif.upload.title": "LDIF file upload in progress",
	"enrollment.ldif.upload.message": "Please do not close or refresh the browser while the LDIF file is being uploaded.",
	"enrollment.ldif.upload.message.auto": " This dialog box  will close automatically.",
	"enrollment.ldif.sync.title": "Sync now",
	"enrollment.ldif.sync.file": "File",
	"enrollment.ldif.sync.mode": "Data file",
	"enrollment.ldif.sync.complete": "Complete",
	"enrollment.ldif.sync.delta": "Delta",
	"enrollment.ldif.sync.uploadFileType": "Data file",
	"enrollment.definition.sync.notice": {
		"important": "Important",
		"part1": "Before running Auto-sync, ensure that the LDIF file available in the ",
		"dir": "Control-Center-Install-Dir>/tools/enrollment/data directory ",
		"part2": "with the following naming convention: ", 
		"delta": "enrollment_name_delta.ldif",
		"delta.explain": "- File contains only the changes since last sync.",
		"complete": "enrollment_name_complete.ldif",
		"complete.explain": "- File contains all data."
	},
	"enrollment.port.exceed.maxlength": "Server port cannot exceed 5 characters.",
	"enrollment.common": {
		"filter": "Filter",
		"group.enumeration": "Group attributes for enumeration",
		"structural.group": "Structural Group Filter",
		"connection.test.success": "Connection tested successfully",
		"first.sync": "First sync on",
		"sync.at": "Sync at",
		"repeat.every": "Repeat for every",
		"delete.inactive.group": "Delete inactive group members",
		"filters.and.attribute.mapping": "Filters & attributes mapping",
		"add.attribute" : "ADD ATTRIBUTE",
		"cc.attribute": "Control Center Attributes",
		"directory.attributes": "Directory Attributes",
		"no.entity.checked": "Select entities to enroll to add attributes"
	},      
	"enrollment.active.directory": {
		"server": "Server",
		"port": "Port",
		"username": "AD Server Username",
		"password": "AD Server Password",
		"ssl": "SSL Secure Mode"
	},
	"enrollment.azure": {
		"oAuth": "Azure OAuth URL",
		"tenant": "Tenant",
		"application.id": "Application ID",
		"application.key": "Application Key",
		"ssl": "SSL Secure Mode"
	},
	"delegation": {
		"TAB": {
			"Delegations": "Delegation Policies",
			"Users": "Users and Groups"
		},
		"list": {
			"page.title": "Delegation Policies",
			"btn.createDelegation": "ADD Delegation Policy",
			"nodelegation.msg": "No delegations found.",
			"del.confirm": "Are you sure you want to delete the selected item? This action cannot be undone.",
			"del.success": "The delegation policy has been deleted.",
			"title.LoadMore": "LOAD MORE"
		},
		"userlist": {
			"tab.user": "Users",
			"page.title": "Users And User Group",
			"btn.createUser": "ADD USER",
			"btn.import.from.AD": "ADD EXTERNAL USER",
			"nouser.msg": "No user found.",
			"del.confirm": "Are you sure you want to delete the selected item? This action cannot be undone.",
			"del.success": "The user has been deleted.",
			"unlocked.success": "The user has been unlocked.",
			"reset.gauth.token.confirm": "Are you sure you want to reset the multi-factor authentication registration?",
			"reset.gauth.token.success": "The multi-factor authentication registration has been reset."
		},
		"grouplist": {
			"tab.group": "User Groups",
			"btn.addGroup": "ADD GROUP",
			"btn.import.from.AD": "ADD EXTERNAL GROUP",
			"del.success": "The user group has been deleted.",
			"nogroup.msg": "No group found."
		},
		"loginConfig": {
			"title": "User Source",
			"noconfig.msg": "No user source found.",
			"add": "ADD USER SOURCE",
			"create.title": "Add user source",
			"subtitle": {
				"info": "Configuration Information",
				"attribute": "User Attributes"
			},
			"label": {
				"name": "Name",
				"type": "Type",
				"username": "Username",
				"password": "Password",
				"ldapurl": "LDAP URL",
				"ldapdomain": "LDAP Domain",
				"ldaprootdn": "Base DN",
				"userSearchBase": "Filter",
				"connectionTimeout": "Connection Timeout",
				"useStartTLS": "Use STARTTLS",
				"dburl": "Database URL",
				"dbdriver": "Database Driver",
				"dbdialect": "Database Dialect",
				"azureAd": {
					"enabled.true": "Enabled",
					"enabled.false": "Disabled",
					"authorityUri": "Authority URI",
					"attributeUri": "Extended Attribute URI",
					"tenantId": "Tenant ID",
					"applicationId":"Application ID",
					"applicationKey":"Application Password"
                },
                "saml2": {
                    "enabled.true": "Enabled",
                    "enabled.false": "Disabled",
                    "yesno.true": "Yes",
                    "yesno.false": "No",
                    "loginImage": "Login Image",
                    "idpMetadata": "Id Provider Metadata",
                    "spMetadata": "Service Provider Metadata",
					"spEntityId": "Service Provider Entity ID",
                    "maximumAuthenticationLifetime": "Maximum Authentication Lifetime",
                    "destinationBinding": "Destination Binding",
                    "authnContextClassRefs": "Authentication Context Class References",
                    "authnContextComparisonType": "Authentication Context Comparison Type",
                    "nameIdPolicyFormat": "Name ID Policy Format",
                    "forceAuth": "Force Authentication",
                    "passive": "Passive",
                    "wantsAssertionsSigned": "Wants Assertions Signed",
                    "wantsResponseSigned": "Wants Response Signed",
                    "allSignatureValidationDisabled": "All Signature Validation Disabled",
                    "signServiceProviderMetadata": "Sign Service Provider Metadata",
                    "principalAttributeId": "Principal Attribute ID",
                    "useNameQualifier": "Use Name Qualifier",
                    "providerName": "Provider Name",
                    "nameIdPolicyAllowCreate": "Name ID Policy Allow Create",
                    "messageStoreFactory": "Message Store Factory",
                    "signAuthenticationRequest": "Sign Authentication Request",
                    "signServiceProviderLogoutRequest": "Sign Service Provider Logout Request",
                    "signatureAlgorithms": "Signature Algorithms",
                    "signatureReferenceDigestMethods": "Signature Reference Digest Methods",
                    "signatureCanonicalizationAlgorithm": "Signature Canonicalization Algorithm",
                    "attributeNameFormat": "Attribute Name Format",
                    "forceAuthentication": "Force Authentication",
                    "signAssertion": "Sign Assertion",
                    "signResponse": "Sign Response",
                    "disableAllSignatureValidation": "Disable All Signature Validation",
                    "allowNameIdPolicyCreation": "Allow Name ID Policy Creation"
				}
			},
			"placeholder": {
				"name": "Enter a name for the user source",
				"username": "e.g. Administrator",
				"password": "Password",
				"ldapurl": "e.g. ldap://ldap.domain.com",
				"ldapdomain": "e.g. ldap.domain.com",
				"ldaprootdn": "e.g. ou=Employees,dc=ldap,dc=domain,dc=com",
				"userPrincipalFilter": "e.g userPrincipalName={dn}",
				"userSearchBase": "e.g (&(objectclass=user)(objectclass=person)(objectclass=organizationalPerson)(!(objectclass=computer)))",
				"dburl": "e.g. jdbc:oracle:thin:@10.23.58.115:1521:xe",
				"dbdriver": "e.g. oracle.jdbc.driver.OracleDriver",
				"dbdialect": "e.g. org.hibernate.dialect.Oracle10gDialect",
				"azureAd": {
					"authorityUri": "e.g. https://login.microsoftonline.com",
					"attributeUri": "e.g. https://graph.microsoft.com/beta/users/${id}",
					"apiUri": "e.g. https://graph.microsoft.com/",
					"tenantId": "e.g. cloudazdev.onmicrosoft.com",
					"applicationId":"",
					"applicationKey":""
                }, 
                "saml2": {
                    "spEntityId": "e.g. https://mydomain.com",
					"principalAttributeId": "e.g. eduPersonPrincipalName"
				}
			},
			"grammar": {
				"thisConfig": "This user source",
				"ofType": "of type",
				"willLoad": "Loads users with the following attributes",
				"mapTo": "mapped to",
				"placeholder": {
					"configName": "User Source",
					"attributeName": "&lt;attribute&gt;",
					"attributeMapped": "attribute in CC"
				}
			},
			"msg": {
				"del.confirm": "Are you sure you want to delete the selected item? This action cannot be undone.",
				"del.success": "The User Source has been deleted.",
				"added.confirm": "The User Source has been saved.",
				"modified.confirm": "The User Source has been saved.",
				"noattr.notify": "No attributes found. Please provide the correct connection information and click 'CONNECT'.",
				"unavailable": "The User Source is not available.",
				"resetPwd.confirm": "Are you sure you want to reset the user’s password?",
				"userSourceList.infoDelete": "To delete the configuration information of a user source, you must first remove all imported users associated with the user source.",
				"userSource.notifyEdit": "There is imported user associated with this user source. Configuration information change may cause the user unable to login normally."
			},
			"validation": {
				"ldapurl": {
					"required": "LDAP URL is mandatory",
					"maxLength": "LDAP URLs cannot exceed 255 characters"
				},
				"ldapdomain": {
					"required": "LDAP Domain is mandatory",
					"maxLength": "LDAP Domain cannot exceed 255 characters"
				},
				"ldaprootdn": {
					"required": "LDAP Base DN is mandatory",
					"maxLength": "LDAP Base DN cannot exceed 255 characters"
				},
				"ldapusername": {
					"required": "LDAP username is mandatory",
					"maxLength": "LDAP username cannot exceed 255 characters"
				},
				"userPrincipalFilter": {
					"required": "LDAP User Filter is mandatory",
					"maxLength": "LDAP User Filters cannot exceed 255 characters"
				},
				"userSearchBase": {
					"required": "Filter is mandatory",
					"maxLength": "Filter cannot exceed 255 characters"
				},
				"connectionTimeout": {
					"required": "Connection timeout is mandatory",
					"pattern": "Connection timeout allows only numeric value"
				},
				"password": {
					"required": "Password is mandatory"
				},
				"dburl": {
					"required": "Database URL is mandatory",
					"maxLength": "Database URLs cannot exceed 255 characters"
				},
				"dbdriver": {
					"required": "Database Driver is mandatory",
					"maxLength": "Database Driver cannot exceed 255 characters"
				},
				"dbdialect": {
					"required": "Database Dialect is mandatory",
					"maxLength": "Database Dialects cannot exceed 255 characters"
				},
                "attr" :{
                    "external.required": "Choose an attribute to map from",
                    "internal.required": "Choose an attribute to map to",
                    "required.required": "Indicate if this is required attribute",
                    "name.required": "Attribute name is mandatory",
                    "friendlyName.required": "Friendly name is mandatory",
                    "nameFormat.required": "Name format is mandatory"
                },
				"azureAd": {
					"username.required": "Username is mandatory",
					"displayOrder": {
						"required": "Display order is mandatory",
						"pattern": "Please enter a digit"
					},
					"actionUri.required": "Action URI is mandatory",
					"authorityUri.required": "Authority URI is mandatory",
					"attributeUri.required":"Extended attribute URI is mandatory",
					"apiUri.required": "API URI is mandatory",
					"appIdUri.required": "App ID URI is mandatory",
					"hint.required": "Hint is mandatory",
					"image.required": "Image is mandatory",
					"tenantId.required": "Tenant ID is mandatory",
					"authorizeService.required":"Authorize Service is mandatory",
					"tokenClaimService.required":"Token Claim Service is mandatory",
					"logoutService.required":"Logout Service is mandatory",
					"applicationId.required":"Application ID is mandatory",
					"applicationKey.required":"Application Password is mandatory"
                },
                "saml2": {
					"spEntityId.pattern": "SP Entity ID allows only URI format",
                    "loginImage.required": "Login image file is mandatory",
                    "idpMetadata.required": "ID provider metadata file is mandatory",
					"spEntityId.required": "Service Provider Entity ID is mandatory",
                    "principalIdAttribute.required": "Principal ID attribute is mandatory",
                    "maximumAuthenticationLifetime.required": "Maximum authentication lifetime is mandatory",
					"maximumAuthenticationLifetime.pattern": "Maximum authentication lifetime allows only integer value",
					"minAuthenticationLifetime": "Maximum authentication lifetime can not lesser than 1", 
					"authenticationContextClassReference.required": "Authentication Context Class Reference is mandatory",
					"signatureAlgorithm.required": "Signature Algorithm is mandatory",
					"signatureReferenceDigestMethod.required": "Signature Reference Digest Method is mandatory"
				}
			}
		},
		"search": {
			"text.placeholder": "Search for delegation policies",
			"title.AllEffect": "All",
			"usersource.label": "User Source",
			"usertype.label": "User type",
			"usertype.all": "All",
			"username.placeholder": "Search for user first name or last name",
			"username.label": "User name",
			"groupname.placeholder": "Search for user group name"
		},
		"user.import": {
			"confirm.user.import.pending": "There are users selected but not imported. Are you sure you want to discard them and go back to user list?",
			"notify.user.imported": "All users have been imported.",
			"notify.user.import.failed": "One or more users were not imported. Please try again later.",
			"notify.user.import.invalid": "The following user(s) cannot be imported: {{user}}."
		},
		"group.import": {
			"confirm.group.import.pending": "There are groups selected but not imported. Are you sure you want to discard them and go back to user list?",
			"notify.group.imported": "All groups have been imported.",
			"notify.group.import.failed": "One or more groups were not imported. Please try again later.",
			"notify.group.import.invalid": "The following group(s) cannot be imported: {{group}}."
		},
		"create": {
			"title": {
				"CreateDelegation": "Add Delegation Policy"
			},
			"label": {
				"access": "{{!allow || allow == 'false' ? 'No Access' : 'Allow Access' }}",
				"effect": "{{allow == 'true' ? 'Allow' : 'Deny'}}"
			},
			"desc": {
				"chooseuser": "Conditions",
				"chooseresources": "Choose the meta-resource types",
				"chooseactions": "Choose the actions"
			},
			"subtitle": {
				"ruleInfo": "BASIC INFORMATION",
				"conditions": "EFFECT & CONDITIONS",
				"resource": "META-RESOURCE TYPES",
				"action": "ACTIONS",
				"obligations": "OBLIGATIONS",
				"in": "In",
				"notIn": "Not In",
				"RuleEffect": "Effect"
			},
			"placeholder": {
				"name": "The name of the delegation policy",
				"description": "A brief description of the delegation policy",
				"tags.allowed": "Tags allowed",
				"delegationName": "Delegation Policy Name",
				"users": "{{installMode == 'SAAS' ? 'CloudAz' : 'Control Center'}} Users",
				"value": "value",
				"actions": "actions",
				"resources": "meta-resource types"
			},
			"button": {
				"permission.add": "Add Permission",
				"condition.add": "ADD CONDITION"
			},
			"grammar": {
				"thisDelegationRule": "This delegation policy",
				"Will": "Has this effect",
				"users": "When users with these attributes",
				"toPerform": "Perform these actions",
				"on": "On these resources",
				"in": "in",
				"notIn": "not in",
				"ifAllow": "If allowed perform",
				"ifDeny": "If denied perform"
			},
			"validation": {
				"name.required": "Name is mandatory.",
				"name.pattern": "Name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
				"email.required": "Email address is mandatory.",
				"email.pattern": "Please provide a valid email address.",
				"firstname.required": "First name is mandatory.",
				"lastname.required": "Last name is mandatory.",
				"invalid.or.actions": "At least one of the permissions {0} or {1} should be selected with {2} permission"
			},
			"discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the delegation policy list?",
			"reset.confirm": "Are you sure you want to discard changes and reset the form?",
			"added.confirm": "The delegation policy has been saved.",
			"modified.confirm": "The delegation policy has been saved.",
			"unavailable": "Delegation policy not available",
			"action.change.notification": "When you select an action, all actions that are required are automatically selected across modules. You can review each module and choose to clear any action that is not mandatory.",
			"multival.attribute.change.notification": "When you select multi-value user attribute(s), this attribute only available for AzureAD authenticated user."
		},
		"createuser": {
			"title": {
				"CreateUser": "Add User"
			},
			"desc": {
				"chooseattributes": "Choose attributes for CC Users",
				"chooseresources": "Choose the meta-resource types",
				"chooseactions": "Choose the actions"
			},
			"subtitle": {
				"userInfo": "USER INFORMATION",
				"customattributes": "CUSTOM ATTRIBUTES"
			},
			"placeholder": {
				"username": "Username",
				"email": "e.g. user@example.com",
				"grammar.email": "Email address",
				"firstname": "First name of the user",
				"lastname": "Last name of the user",
				"password": "Enter password",
				"confirmpassword": "Reenter password"
			},
			"label": {
				"category": "Category",
				"username": "Username",
				"email": "Email",
				"firstname": "First Name",
				"lastname": "Last Name",
				"password": "Password",
				"confirmpassword": "Confirm Password"
			},
			"button": {
				"permission.add": "Add Permission"
			},
			"grammar": {
				"thisUser": "This user",
				"withFirstName": "with first name",
				"andLastName": "and last name",
				"hasAttributes": "has these attributes",
				"username": "and this username",
				"email": "and this email address"
			},
			"validation": {
				"name.required": "Name is mandatory.",
				"attr.key.required": "Add an attribute name",
				"attr.value.required": "Add an attribute value",
				"attrname.is.implicit": "The attribute \"{{attrname}}\" already exists. Please provide the correct attribute."
			},
			"discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the user list?",
			"reset.confirm": "Are you sure you want to discard changes and reset the form?",
			"added.confirm": "The user has been saved",
			"modified.confirm": "The user has been saved",
			"unavailable": "User not available"
		},
		"title": {
			"exportAll": "Export All Delegation Policies",
			"export": "Export Selected Delegation Policies",
			"import": "Import Delegation Policies"
		}
	},
	"common": {
		"name": "Name",
		"description": "Description",
		"discard": "RESET",
		"save": "SAVE",
		"saveAndDeploy": "SAVE & DEPLOY",
		"saveAndActivate": "SAVE & ACTIVATE",
		"confirm": "CONFIRM",
		"cancel": "CANCEL"
	},
	"userprofile": {
		"validation": {
			"alphanumeric": {
				"pattern": "Username must begin with a letter followed by letters, numbers, periods (.), or underscores (_)."
			},
			"password": {
				"maxLength": "Passwords cannot exceed 128 characters",
				"minLength": "Passwords cannot be shorter than 10 characters",
				"required": "Password is mandatory",
				"pattern": "The password does not meet complexity requirements"
			},
			"newPassword": {
				"maxLength": "New passwords cannot exceed 128 characters",
				"minLength": "New passwords cannot be shorter than 10 characters",
				"required": "New password is mandatory"
			},
			"confirmNewPassword": {
				"maxLength": "Confirm new passwords cannot exceed 128 characters",
				"minLength": "Confirm new passwords cannot be shorter than 10 characters",
				"required": "Confirm new password is mandatory",
				"notMatch": "Confirm new password does not match new password"
			},
			"confirmPassword": {
				"maxLength": "Confirm passwords cannot exceed 128 characters",
				"minLength": "Confirm passwords cannot be shorter than 10 characters",
				"required": "Confirm password is mandatory",
				"notMatch": "Confirm password does not match new password"
			}
		}
	},
	"logout": "logout",
	"Change Password": "Change Password",
	"LAST LOGIN": "LAST LOGIN",
	"cc.password.requirement": "The password must be between 10 and 128 non-whitespace characters, and must contain at least one number, one lowercase letter, one uppercase letter, one non-alphanumeric character, and contain no more than two identical consecutive characters.",
	"Session has expired. Please login again": "Session has expired. Please login again",
	"tooltip": {
		"dashboard": "Dashboard",
		"policystudio": "Policy Studio",
		"reporter": "Reports",
		"administrator": "Administrator",
		"delegation": "Delegated Administration"
	},
	"cc.copyright": "© 2007-{{currentYear}} NextLabs Inc.",
	"cc.copyright.reserved":"All rights reserved.",
	"cc.access.not.allowed": "You are not authorized to visit this page",
	"cc.access.requiredPermission": "Required Permission: ",
	"cc.access.actionType.VIEW": "View ",
	"cc.access.actionType.EDIT": "Edit ",
	"cc.access.actionType.INSERT": "Create ",
	"cc.access.actionType.DELETE": "Delete ",
	"cc.access.actionType.DEPLOY": "Deploy ",
	"cc.access.actionType.MANAGE": "Manage ",
	"cc.access.authorizableType.POLICY": "Policy",
	"cc.access.authorizableType.COMPONENT": "Component",
	"cc.access.authorizableType.POLICY_MODEL": "Component Type",
	"cc.access.authorizableType.DELEGATE_MODEL": "Delegation Policies",
	"cc.access.authorizableType.DELEGATION_POLICY": "Delegation Policies",
	"cc.access.authorizableType.DELEGATION_COMPONENT": "Delegation Policies",
	"cc.access.authorizableType.POLICY_TAG": "Policy Tags",
	"cc.access.authorizableType.POLICY_MODEL_TAG": "Component Type Tags",
	"cc.access.authorizableType.COMPONENT_TAG": "Component Tags",
	"cc.access.authorizableType.COMPONENT_FOLDER": "Component Folder",
	"cc.access.authorizableType.POLICY_FOLDER": "Policy Folder",
	"dashboard": {
		"title": {
			"no.data.mask": "No records available"
		},
		"label": {
			"policy.status": {
				"total": "Total Policies",
				"deployed": "Deployed",
				"undeployed": "De-activated",
				"draft": "Draft Policies",
				"draft.new": "Never deployed",
				"draft.edit": "Previously deployed"
			},
			"pdpinfo": "{{count}}{{count == 1 ? ' PDP' : ' PDPs'}} with {{vcpu}} vCPU {{vcpu == 1 ? ' core' : ' cores'}} each"
		},
		"sysDetails.license_properties.never.expires" : "Never Expires"
	},
	"requestbuilder": {
		"title": {
			"addRequest": "Policy Tester"
		},
		"tabs": {
			"requestInterface": "REQUEST",
			"responseInterface": "RESPONSE",
			"logsInterface": "LOGS",
			"requestInfo": "BUILD REQUEST",
			"responseInfo": "VIEW RESPONSE",
			"jsonEditor": "VIEW JSON",
			"xmlEditor": "VIEW XML",
			"jsonResponse": "VIEW JSON",
			"xmlResponse": "VIEW XML"
		},
		"placeholder": {
			"requestName": "Name of the Request",
			"selectPolicies": "Select Policies",
			"addValues": "Add Values"
		},
		"label": {
			"subjectConditions": "Add SUBJECT attributes",
			"resourceConditions": "Add RESOURCE attributes",
			"envAttributes": "Add ENVIRONMENT attributes",
			"otherCategories": "OTHER CATEGORIES",
			"conditionName": "Name",
			"conditionValue": "Value",
			"effect": "Policy Effect",
			"selectPolicies": "SELECT POLICIES",
			"responseObligation": "OBLIGATIONS",
			"decision": "Decision",
			"evaluationTime": "Evaluation Time",
			"resourcetype": "Resource Type",
			"action": "Action",
			"includeSubPolicy": "Display Sub-Policies",
			"showEvalLogs": "Enable Logs"
		},
		"button": {
			"validate": "Validate"
		},
		"message": {
			"logsEmpty": "There are no logs to display"
		},
		"discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them?",
		"reset.confirm": "Are you sure you want to reset all the changes?"
	},
	"attributeProvider": {
		"title": {
			"create": "Add Attribute Provider",
			"list": "Attribute Providers",
			"search": "Search"
		},
		"subTitle": {
			"metaInfo": "Meta Information",
			"script": "Script"
		},
		"button": {
			"discard": "Reset",
			"create": "Save",
			"add": "ADD Attribute Provider",
			"back": {
				"confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to Attribute Provider list?"
			}
		},
		"label": {
			"name": "Name",
			"description": "Description"
		},
		"validation": {
			"pipName.required": "Name is mandatory.",
			"pipName.maxLength": "Name cannot exceed 255 characters.",
			"pipName.pattern": "Name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
			"description.maxLength": "Description cannot exceed 4000 characters"
		},
		"placeholder": {
			"name": "The name of the attribute provider script",
			"description": "A brief description of the attribute provider script",
			"search": "Search for attribute providers"
		}
	},
	"ui": {
		"goasyoutype": {
			"selectall": "Select All"
		}
	},
	"sysconfiglist": {
		"title": {
			"sysConfigManagement": "System Configuration",
			"filterApplied": "FILTERS APPLIED",
			"loadMore": "LOAD MORE",
			"search": "SEARCH"
		}
	},
	"sysconfigsearch": {
		"label": {
			"group": "Group",
			"allGroups": "All Groups",
			"more": "More",
			"cancel": "CANCEL",
			"apply": "APPLY",
			"clearSearch": "CLEAR FIELDS",
			"sortBy": "SORT BY",
			"advConfig": "Advanced Configuration"
		},
		"text.placeholder": "Search for system configurations"
	},
	"sysconfig.empty.list.msg": "No system configurations match the specified criteria.",
	"editsysconfig": {
		"sysconfig": {
			"unavailable": "System Configuration is not available",
			"validation": {
				"required": "This value is mandatory.",
				"pattern": "The value provided is invalid."
			},
			"value.true": "Yes",
			"value.false": "No"
		},
		"button": {
			"discard": "RESET",
			"save": "SAVE"
		},
		"saved.notify": "System configurations have been saved.",
		"restart.notify": "Please restart the service to complete the configuration updates."
	},
	"sysconfig": {
		"discard.confirm": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the system configuration list?",
		"administrator": "Administrator",
		"administrator.config.update.refresher.enabled": "Auto apply configuration change for CAS",
		"administrator.context.parameter.ComponentName": "Administrator Component Name",
		"administrator.context.parameter.DMSLocation": "Administrator DMS location",
		"administrator.context.parameter.EnforcePasswordHistory": "Administrator Enforce Password History",
		"administrator.context.parameter.Location": "Administrator Location",
		"administrator.context.parameter.InstallHome": "Home Location",
		"administrator.logger.manager.enabled": "Enable log manager",
		"administrator.logger.update.refresher.enabled": "Auto apply logging configuration changes for Administrator",
		"application" : {
			"application.version": "Version",
			"cc.mail.default.to" : "Default Recipient",
			"config.activeMQConnectionFactory.brokerURL" : "ActiveMQ Broker URL",
			"config.activeMQConnectionFactory.password" : "ActiveMQ Broker password",
			"config.activeMQConnectionFactory.userName" : "ActiveMQ Broker username",
			"configclient.config.file.output.enabled" : "Enable Configuration Debugging",
			"configclient.config.file.output.filePath" : "Configuration Debugging Output Location",
			"enforce.password.history": "Password History Enforcement",
			"help.url.base": "Help Content Base URL",
			"help.url.contentFormat": "Help Content Format",
			"logging.path": "Logging Path",
			"cc-oidc-config.services[1].serviceId": "Service ID",
			"cc-oidc-config.services[1].clientSecret": "Client Secret",
			"server.license.dir": "Control Center license storage directory",
			"server.name" : "Web Application Base URL",
			"spring.jms.pubSubDomain" : "Use Spring JMS as Topic",
			"spring.jmx.enabled" : "Enable Spring JMX",
			"spring.mail.host" : "Host",
			"spring.mail.password" : "Password",
			"spring.mail.port" : "Port",
			"spring.mail.properties.mail.smtp.auth" : "Allow SMTP Authentication",
			"spring.mail.properties.mail.smtp.from" : "Default Sender",
			"spring.mail.properties.mail.smtp.starttls.enable" : "Start TLS",
			"spring.mail.username" : "Username",
			"web.service.server.name" : "Web Service Base URL",
			"key.store.password" : "Key Store Password",
			"key.store.type" : "Key Store Type",
			"trust.store.password" : "Trust Store Password",
			"trust.store.type" : "Trust Store Type",
			"mfa.gauth.enabled" : "Enable",
			"security.xframe.options" : "X-Frame-Options Mode",
			"security.xframe.allowedOrigins" : "Allowed Origin",
			"security.cors.allowedOrigins" : "Allowed Origins",
			"ssl.overrideDefaultTruststore" : "Use Control Center Truststore"
		},
		"security.xframe.options.DENY" : "Deny",
		"security.xframe.options.ALLOW-FROM" : "Allow-from",
		"security.xframe.options.SAMEORIGIN" : "Same Origin",
		"cas": "Central Authentication Service (CAS)",
		"cas.allowedServices.patterns": "CAS Trusted Service URLs",
		"cas.cas.authn.mfa.gauth.crypto.encryption.key": "Multi-factor Authentication Encryption Key",
		"cas.cas.authn.mfa.gauth.crypto.signing.key": "Multi-factor Authentication Signing Key",
		"cas.cas.authn.mfa.gauth.issuer": "Issuer",
		"cas.cas.authn.mfa.gauth.label": "Display Label",
		"cas.cas.authn.pm.autoLogin": "Allow Auto Login",
		"cas.cas.authn.pm.enabled": "Password Management Enabled",
		"cas.cas.authn.pm.reset.crypto.encryption.key": "Encryption Key",
		"cas.cas.authn.pm.reset.crypto.signing.key": "Signing Key",
		"cas.cas.authn.pm.reset.expirationMinutes": "Reset Link Expiration Policy (in Minutes)",
		"cas.cas.authn.pm.reset.mail.from": "Default Sender Email",
		"cas.cas.authn.pm.reset.mail.subject": "Mail Subject",
		"cas.cas.authn.pm.reset.mail.text": "Mail Body",
		"cas.cas.authn.pm.reset.securityQuestionsEnabled": "Enable Security Questions",
		"cas.cas.authn.oauth.accessToken.maxTimeToLiveInSeconds": "Control Center Console JWT ID Token Expiration Policy (in Seconds)",
		"cas.cas.authn.oauth.refreshToken.timeToKillInSeconds": "Control Center Console JWT Refresh Token Expiration Policy (in Seconds)",
		"cas.cas.server.name": "Server Name",
		"cas.cas.server.prefix": "Server Prefix",
		"cas.cas.tgc.crypto.encryption.key": "Ticket Granting Cookie Encryption Key",
		"cas.cas.tgc.crypto.signing.key": "Ticket Granting Cookie Signing Key",
		"cas.cas.webflow.crypto.encryption.key": "Webflow Encryption Key",
		"cas.cas.webflow.crypto.signing.key": "Webflow Signing Key",
		"cas.config.update.refresher.enabled": "Auto apply configuration change for CAS",
		"cas.db.comboPooledDataSource.acquireIncrement": "Acquire increment",
		"cas.db.comboPooledDataSource.acquireRetryAttempts": "Acquire retry attempts",
		"cas.db.comboPooledDataSource.acquireRetryDelay": "Acquire retry delay",
		"cas.db.comboPooledDataSource.checkoutTimeout": "Checkout timeout",
		"cas.db.comboPooledDataSource.idleConnectionTestPeriod": "Idle connection test period",
		"cas.db.comboPooledDataSource.maxIdleTime": "Maximum idle time excess connections",
		"cas.db.comboPooledDataSource.maxPoolSize": "Maximum pool size",
		"cas.db.comboPooledDataSource.minPoolSize": "Minimum pool size",
		"cas.db.comboPooledDataSource.preferredTestQuery": "Preferred test query",
		"cas.failed.login.attempts": "Maximum Failed Login Attempts",
		"cas.logger.update.refresher.enabled": "Auto apply logging configuration changes for Reporter",
		"cas.logger.manager.enabled": "Enable log manager",
		"cas.ldaps.trustStoreType": "Trust Store Type",
		"cas.ldaps.trustStorePassword": "Trust Store Password",
		"cas.ldaps.trustStoreFile": "Trust Store File",
		"cas.ldaps.keyStoreType": "Key Store Type",
		"cas.ldaps.keyStorePassword": "Key Store Password",
		"cas.ldaps.keyStoreFile": "Key Store File",
		"config-service" : {
			"activemq.broker.connector.bindAddress" : "ActiveMQ Broker Bind Address",
			"activemq.broker.enabled" : "Enable embedded ActiveMQ broker",
			"activemq.broker.password" : "ActiveMQ broker password",
			"activemq.broker.username" : "ActiveMQ broker username",
			"activemq.brokerService.persistent" : "ActiveMQ broker persistent delivery",
			"client.applications" : "Client applications",
			"config.client.password" : "Password",
			"config.client.username": "Username",
			"db.comboPooledDataSource.acquireIncrement" : "Acquire increment",
			"db.comboPooledDataSource.acquireRetryAttempts" : "Acquire retry attempts",
			"db.comboPooledDataSource.acquireRetryDelay" : "Acquire retry delay",
			"db.comboPooledDataSource.checkoutTimeout" : "Checkout timeout",
			"db.comboPooledDataSource.idleConnectionTestPeriod" : "Idle connection test period",
			"db.comboPooledDataSource.maxIdleTime" : "Maximum idle time excess connections",
			"db.comboPooledDataSource.maxPoolSize" : "Maximum pool size",
			"db.comboPooledDataSource.minPoolSize" : "Minimum pool size",
			"db.comboPooledDataSource.preferredTestQuery" : "Preferred test query",
			"security.basic.enabled" : "Security Enabled",
			"spring.cloud.config.server.jdbc.sql" : "Spring JDBC SQL Configuration",
			"spring.cloud.config.server.native.searchLocations" : "Spring Search Location",
			"spring.profiles.active" : "Spring Active Profiles"
		},
		"console": "Console",
		"console.app.service.home": "Control Center console URL",
		"console.app.service.security": "CAS session verification URL",
		"console.cas.service.login": "Login URL",
		"console.cas.service.logout": "Logout URL",
		"console.cas.service.url": "CAS service URL",
		"console.config.update.refresher.enabled": "Auto apply configuration change for Console",
		"console.dashboard": "Console Dashboard Configuration",
		"console.data.transportation.allowPlainTextExport": "Allow Plain Text Export",
		"console.data.transportation.allowPlainTextImport": "Allow Plain Text Import",
		"console.data.transportation.keystoreFile": "Key Store File",
		"console.data.transportation.mode": "Mode",
		"console.data.transportation.sharedKey": "Shared Encryption Key",
		"console.db.comboPooledDataSource.maxPoolSize": "Maximum Pool Size",
		"console.db.hibernate.ddl.auto": "Hibernate DDL Auto",
		"console.db.hibernate.dialect": "Hibernate Dialect",
		"console.db.hibernate.show.sql": "Show SQL",
		"console.help.content.dir.path": "Help Content Path",
		"console.logger.manager.enabled": "Enable Log Manager",
		"console.logger.update.refresher.enabled": "Auto apply logging configuration changes for Console",
		"console.mm.dd.yyyy": "Format",
		"console.policy.exports.file.location": "Temporarily Export Folder",
		"console.policyValidator.url": "Policy Validator URL",
		"console.search.engine.cluster.name": "Cluster Name",
		"console.search.engine.host": "Host",
		"console.search.engine.local": "Embedded Mode",
		"console.search.engine.port": "Port",
		"console.server.log.queue.dir.path": "Log Queue Location",
		"console.spring.jpa.database-platform": "Database Platform",
		"console.spring.jpa.open-in-view": "Open Session in View",
		"console.spring.servlet.multipart.max-file-size": "Maximum size permitted for uploaded files",
		"console.spring.servlet.multipart.max-request-size": "Maximum size allowed for multipart/form-data requests",
		"data.transportation.mode.PLAIN": "Plain Text",
		"data.transportation.mode.SANDE": "Signed and Encrypted",
		"help": "Help Content",
		"help.url.contentFormat.aspx": "ASPX",
		"help.url.contentFormat.html": "HTML",
		"reporter": "Reporter",
		"reporter.config": "Reporter Configuration",
		"reporter.context.parameter.ComponentName": "Reporter Component Name",
		"reporter.parameter.DMSLocation": "Reporter DMS location",
		"reporter.context.parameter.EnforcePasswordHistory": "Reporter Enforce Password History",
		"reporter.context.parameter.Location": "Reporter Location",
		"reporter.context.parameter.InstallHome": "Home Location",
		"reporter.show.sharepoint" : "Show SharePoint Logs",
		"reporter.use.past.data.for.monitoring" : "Include Pre-existing Data",
		"console.dashboard.widget.active-users.enabled": "Show Active Users Widget",
		"console.dashboard.widget.activities-by-resource.enabled": "Show Activities by Resource Widget",
		"console.dashboard.widget.activity-alerts.enabled": "Show Activity Alerts Widget",
		"console.dashboard.widget.enrollment.enabled": "Show Enrollment Widget",
		"console.dashboard.widget.frequently-evaluated-policies.enabled": "Show Frequently Evaluated Policies Widget",
		"console.dashboard.widget.pdp-throughput.enabled": "Show PDP Throughput Widget",
		"console.dashboard.widget.policies-grouped-by-tags.enabled": "Show Policies Grouped by Tags Widget",
		"console.dashboard.widget.policies-not-matched-in-any-request.enabled": "Show Policies not Matched in Any Request Widget",
		"console.dashboard.widget.recent-activities.enabled": "Show Recent Activities Widget",
		"console.dashboard.widget.system-configuration-status.enabled": "Show System Configuration Status Widget",
		"console.dashboard.widget.system-details.enabled": "Show System Details Widget",
		"console.dashboard.widget.refresh.interval": "Dashboard Refresh Interval (in Seconds)",
		"console.remote.env.timeout": "Connection Timeout (in Seconds)",
		"reporter.logger.manager.enabled": "Enable Log Manager",
		"reporter.logger.update.refresher.enabled": "Auto apply logging configuration changes for Reporter",
		"general": "General",
		"auth": "Authentication",
		"app": "Applications",
		"remote.env": "Environments",
		"policy": "Import/Export Bundle",
		"db": "Database",
		"engine" : "Core/Engine/Component",
		"security" : "Security",
		"framework" : "Framework/External libraries",
		"debug" : "Debug",
		"url" : "URL",
		"mail" : "Email (SMTP)",
		"keystore" : "Key Store and Trust Store",
		"information" : "Information",
		"data.transportation": "Import/Export Bundle",
		"connection": "Connection",
		"folder" : "Folder",
		"configService" : "Configuration Service",
		"activityService" : "Activity Service",
		"dictionary" : "Dictionary",
		"configServer" : "Configuration Server",
		"server.keyMgmt" : "Key Management Server",
		"server.intelligence" : "Intelligence Server",
		"server.mgmt" : "Management Server",
		"server.icenet" : "ICEnet Server",
		"server.enrollment" : "Enrollment Server",
		"server.policyMgmt" : "Policy Management Server",
		"user.acc" : "User Account",
		"cors" : "Cross Origin Resource Sharing (CORS)",
		"iframe" : "Iframe",
		"spring" : "Spring",
		"hibernate" : "Hibernate",
		"elasticsearch" : "Elastic Search",
		"sys.props" : "System Properties",
		"pm" : "Reset Password Management",
		"mfa": "Multi-factor Authentication (MFA)",
		"ldap.ssl" : "LDAP Login",
		"authentication" : "Authentication",
		"repositories" : "Repositories",
		"management" : "Management",
		"pf" : "Policy Framework",
		"services" : "Trusted Services/Domains",
		"configClient" : "Configuration Client",
		"config" : "Configuration",
		"ssl": "SSL",
		"cas-oidc-policy-validator" : "NextLabs Policy Validator OIDC Authentication",
		"dms" : {
			"dabs.log.thread.count" : "Threads allocated to incoming activity logs",
			"dabs.log.upload.size" : "Size limit of activity log chunk",
			"dabs.trusted.domains" : "ICENET Trusted Domains",
			"dac.archive.auto.archive" : "Perform Automatic Archives",
			"dac.archive.days.of.month" : "Days of the Month",
			"dac.archive.days.of.week" : "Days of the Week",
			"dac.archive.days.to.keep" : "Archive All Except Last 'n' Days",
			"dac.archive.time.of.day" : "Schedule Operation at",
			"dac.archive.timeout.minutes" : "Timeout (in minutes)",
			"dac.index.rebuild.auto.rebuild" : "Automatically Rebuild",
			"dac.index.rebuild.days.of.month" : "Days of the Month (for Sync Operations)",
			"dac.index.rebuild.days.of.week" : "Days of the Week (for Sync Operations)",
			"dac.index.rebuild.time.of.day" : "Time of Day to Rebuild Indexes",
			"dac.index.rebuild.timeout.minutes" : "Timeout (in minutes)",
			"dac.sync.delete.after.sync" : "Delete logs from staging area after syncing",
			"dac.sync.time.interval" : "Sync Time Interval",
			"dac.sync.timeout.minutes" : "Timeout (in minutes)",
			"dkms.keystore.password" : "Keystore Password",
			"reporter.monitor.execution.interval" : "Interval Between Reporter Monitor Checks",
			"repositories.activity.connection.maxpoolsize" : "Maximum Pool Size",
			"repositories.dictionary.connection.maxpoolsize" : "Maximum Pool Size",
			"repositories.management.connection.maxpoolsize" : "Maximum Pool Size",
			"repositories.pf.connection.maxpoolsize" : "Maximum Pool Size",
			"dac.number.of.extended.attributes" : "Number of Extended Attributes",
			"dac.sync.time.of.day" : "Sync Time of the Day"
		},
		"dabs" : "ICENET",
		"dac" : "Miscellaneous",
		"dkms" : "Destiny ​Key Management Server",
		"activity" : "Activity",
		"index" : "Reporter Index",
		"archive" : "Log Archive",
		"sync" : "Activity Log Sync Operation",
		"attrs" : "Attributes",
		"password.mask" : "**********"
	},
	"logconfiglist": {
		"title": {
			"logConfigManagement": "Server Log Configuration",
			"filterApplied": "FILTERS APPLIED",
			"loadMore": "LOAD MORE",
			"search": "SEARCH",
			"viewBy": "View By"
		}
	},
	"logconfigsearch": {
		"label": {
			"level": "Log Level",
			"allLevels": "All Levels",
			"more": "More",
			"cancel": "CANCEL",
			"apply": "APPLY",
			"clearSearch": "CLEAR FIELDS"
		},
		"text.placeholder": "Search by log name"
	},
	"logconfig.empty.list.msg": "No log configurations match the specified criteria.",
	"editlogconfig": {
		"logconfig": {
			"unavailable": "Log Configuration is not available",
			"validation": {
				"required": "This value is mandatory.",
				"pattern": "The value provided is invalid."
			},
			"value.true": "Yes",
			"value.false": "No"
		},
		"button": {
			"discard": "RESET",
			"save": "SAVE"
		},
		"saved.notify": "Log configurations have been saved."
	},
	"secureStore": {
		"title": "Key & Certificate Management",
		"title.exportAll": "Export All Stores",
		"title.replaceStoreFile": "Replace Store File",
		"empty.list.msg": "No entry match the specified criteria.",
		"storeFile.replaced.msg": "Store file replaced successfully. You may need to restart Control Center application for it to be effective.",
		"delete": {
			"confirm": "Are you sure you want to delete the selected item(s)? This action cannot be undone.",
			"notify": "The {{length > 1 ? 'entries have' : 'entry has'}} been deleted"
		},
		"reset": {
			"confirm": "Are you sure you want to discard changes and reset the form?"
		},
		"validation": {
			"newPassword": {
				"pattern": "The password does not meet complexity requirements"
			},
			"confirmNewPassword": {
				"notMatch": "Confirm new password does not match new password"
			}
		},
		"modal": {
			"changePassword": {
				"title": "Change Password",
				"newPassword": "New Password",
				"confirmNewPassword": "Confirm Password"
			}, 
			"importReply": {
				"title": "Import Certificate Reply",
				"storeName": "Store Name",
				"alias": "Alias",
				"fileName": "Certificate File",
				"verifyTrustChain": "Verify Chain of Trust"
			},
			"importCertificate": {
				"title": "Import Trusted Certificate",
				"storeName": "Store Name",
				"alias": "Alias",
				"fileName": "Certificate File",
				"verifyTrustChain": "Verify Chain of Trust"
			}, 
			"replaceStoreFile": {
				"title": "Replace Secure Store File",
				"chooseFile": "Choose File"
			},
			"importKeyPair": {
				"title": "Import Key Pair",
				"format": "Format",
				"pem": "PEM",
				"pkcs12": "PKCS #12",
				"certificateFile": "Certificate",
				"privateKeyFile": "Private Key",
				"alias": "Alias",
				"storeName": "Import Into",
				"fileName": "From PKCS #12",
				"pkcs12FilePassword": "File Password",
				"overwriteEntry": "If Alias Exists",
				"overwrite.true": "Replace entry",
				"overwrite.false": "Quit import",
				"noEntry": "Provide source key store with password and click List All Keys button to see available entries",
				"listAllKeys": "List All Keys",
				"sourceAlias": "Source Alias",
				"destinationAlias": "Destination Alias"
			}
		},
		"table.header": {
			"entryName": "Entry Name",
			"algorithm": "Algorithm",
			"keySize": "Key Size",
			"validFrom": "Valid From",
			"validUntil": "Valid Until",
			"storeName": "Store Name",
			"moreActions": "Actions"
		},
        "keystore": {
			"title": {
				"main": "Key Manager",
				"add": "Add key pair",
				"renew": "Renew key pair",
				"alias": "Key pair alias"
			},
			"description": "Key Manager is responsible for managing the key material which is used to authenticate, secure and manage the secure connections.",
			"action": {
				"addEntry": "Add Key Pair",
				"importKeyPair": "Import Key Pair",
				"importReply": "Import Certificate Reply",
				"exportEntry": "Export Public Key",
				"deleteEntry": "Delete Key Pair",
				"changePassword": "Change Key Store Password"
			},
			"section": {
				"info": "Key Pair Information",
				"distinguishedName": "Distinguished Name",
				"namedExtension": "Named Extension",
				"thumbprint": "Thumbprint"
			},
			"label": {
				"serialNumber": "Serial Number",
				"version": "Version",
				"issuer": "Issuer",
				"storeName": "Store Name",
				"alias": "Alias",
				"keyAlgorithm": "Key Algorithm",
				"keySize": "Key Size",
				"signatureAlgorithm": "Signature Algorithm",
				"validity": "Validity Period",
				"validFrom": "Valid From",
				"validUntil": "Valid Until",
				"selfSign": "Self Sign",
				"selfSign.true": "Yes",
				"selfSign.false": "No",
				"subjectAlternativeName": "Subject Alternative Name",
				"thumbprint": "Thumbprint"
			},
			"placeHolder": {
				"alias": "mykeypair1",
				"value": "Value",
				"subjectAlternativeName": "dns:www.mydomain.com,ip:10.23.55.17"
			},
			"notification": {
				"changePasswordSuccess": "Key store password changed successfully.",
				"keyAdded": "The key has been saved."
			},
			"validation": {
				"requireAlias": "The alias is mandatory",
				"requireKeySize": "The key size is mandatory",
				"keySizeMin": "The key size is lesser than minimum allowed value. Minimum = 512",
				"keySizeMax": "The key size has exceeded maximum allowed value. Maximum = ",
				"DSA.keySizePattern": "The key size should be multiples of 64 between 512 and 1024, or 2048",
				"RSA.keySizePattern": "The key size should between 512 and 4096",
				"keySizeStep": "The key size should be multiples of 64 between 512 and 1024, or 2048",
				"requireValidity": "The validity period is mandatory",
				"validityMin": "The validity period is lesser than minimum allowed value. Minimum = 1",
				"validityMax": "The validity period has exceeded maximum allowed value. Maximum = 3650",
				"validityPattern": "The validity period should contain only numbers with no decimal places",
				"requireField": "The field is mandatory",
				"requireValue": "The value is mandatory",
				"requireDN": "A value is require for distinguish name"
			},
			"grammar": {
				"section": {
					"alias": "This key pair",
					"storeName": "In key store",
					"keyAlgorithm": "Using key algorithm",
					"keySize": "With key size",
					"selfSign": "Is self-signed with",
					"validityPeriod": "Has validity",
					"distinguishedName": "Distinguished by",
					"namedExtension": "With named extension"
				},
				"placeHolder": {
					"alias": "Key Pair Alias",
					"storeName": "Key Pair Store",
					"keyAlgorithm": "Key Algorithm",
					"keySize": "Key Size",
					"distinguishedName": "Name",
					"namedExtension": "Extension"
				}
			}
        },
        "truststore": {
			"title": {
				"main": "Certificate Manager",
				"add": "Add certificate",
				"renew": "Renew certificate"
			},
			"description": "Certificate Manager allows users to configure and make use of the library's client/server certificate trust validation logic.",
			"action": {
				"addEntry": "Add Certificate",
				"exportEntry": "Export Certificate",
				"changePassword": "Change Trust Store Password"
			},
			"section": {
				"info": "Certificate Information",
				"distinguishedName": "Distinguished Name",
				"namedExtension": "Named Extension",
				"thumbprint": "Thumbprint"
			},
			"label": {
				"standard": "Certificate Standard",
				"serialNumber": "Serial Number",
				"version": "Version",
				"storeName": "Store Name",
				"alias": "Alias",
				"keyAlgorithm": "Key Algorithm",
				"keySize": "Key Size",
				"signatureAlgorithm": "Signature Algorithm",
				"issuer": "Issuer",
				"validFrom": "Valid From",
				"validUntil": "Valid Until",
				"thumbprint": "Thumbprint"
			},
			"notification": {
				"changePasswordSuccess": "Trust store password changed successfully.",
				"certificateImported": "The certificate has been imported successfully.",
				"keyPairImported": "The key pair has been imported successfully."
			},
			"grammar": {
				"section": {
					"alias": "This certificate",
					"storeName": "In trust store",
					"keyAlgorithm": "Using key algorithm",
					"keySize": "With key size",
					"signatureAlgorithm": "Using signature algorithm",
					"issuer": "Is issued by",
					"validityPeriod": "Has validity",
					"distinguishedName": "Distinguished by"
				},
				"placeHolder": {
					"alias": "Certificate Alias",
					"storeName": "Certificate Store",
					"keyAlgorithm": "Key Algorithm",
					"keySize": "Key Size",
					"distinguishedName": "Name"
				}
			}
        }
    },
	"toolManagement" : {
		"tab" : "Enrollment Management",
		"crypt" : {
			"w.label" : "Password",
			"w.placeholder": "Enter the password to be encrypted",
			"w.placeholder.tooltip": "The password to be encrypted",
			"ew.label": "Encrypted Password",
			"ew.placeholder": "The encrypted password",
			"encrypt" : "Encrypt",
			"validation.required": "The password is mandatory",
			"validation.pattern": "The password cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), question mark(?), or a space( ).",
			"validation.maxLength": "The password cannot exceed 255 characters"
		},
		"enrolledDataViewer" : {
			"name": "Enrolled Data Viewer",
			"description": "Enrolled Data Viewer",
			"search":{
				"title": "SEARCH",
				"fields": {
					"type": "Type",
					"enrollment": "Enrollment",
					"text": "Search for enrolled data"
				},
				"values": {
					"allTypes": "All Types",
					"allEnrollments": "All Enrollments"
				}
			},
			"tableColumns": {
				"type": "Type",
				"uniqueName": "Unique Name",
				"displayName": "Display Name",
				"enrollmentName": "Enrollment Name"
			},
			"loadMore": "LOAD MORE",
			"empty": "No enrollment data match the specified criteria"
		},
		"taskList" : {
			"search": "SEARCH",
			"label" : {
				"anyModifiedDate": "Any Date",
				"commands": "Commands",
				"placeholder": "Search for enrollments",
				"saveSearch": "SAVE THIS SEARCH",
				"clearSearch": "CLEAR SEARCH",
				"applySearch": "APPLY SEARCH"
			},			
			"savedSearches": "Saved Searches",
			"filterApplied":"FILTERS APPLIED",
			"empty": "No enrollment match the specified criteria",
			"confirmDelete": "Are you sure you want to delete the selected item? This action cannot be undone.",
			"notifyDelete": "Enrollment deleted successfully.",
			"confirmExecute": "Are you sure you want to sync the selected item? This action cannot be undone.",
			"notifyInProgress": "Enrollment sync is in progress",
			"notifyExecute": "Enrollment synched successfully."
		},
		"createTask" : {
			"title" : "Create Enrollment",
			"subtitle" : {
				"taskInfo" : "TASK INFORMATION",
				"parameters": "PARAMETERS",
				"files": "LDIF FILE UPLOAD"
			},
			"button": {
				"discard": "RESET",
				"saveDraft": "SAVE AS DRAFT",
				"execute": "SAVE & EXECUTE"
			},
			"name": "Name",
			"namePlaceholder": "The name of the enrollment",
			"description": "Description",
			"descPlaceholder": "A brief description of the enrollment",
			"ldifUploadDesc": "The LDIF file to be enrolled in Control Center.",
			"ldifDisplayName": "LDIF File",
			"options": {
				"label": "Options",
				"browse": "Browse",
				"upload": "Upload",
				"load": "Load Default"
			},
			"validation": {
				"maxLength": "The value provided has exceeded the maximum length allowed",
				"required": "This value is mandatory.",
				"pattern": "The value provided is invalid.",
				"requiredOne": "One of these values is mandatory"
			},
			"resetConfirmation": "Are you sure you want to discard changes and reset the form?",
			"discardConfirmation": "There are unsaved changes on the page. Are you sure you want to discard them and go back to the task list?",
			"unavailable": "The task is not available",
			"savedNotify": "Enrollment has been saved",
			"templateNotFound": "The template cannot be found.",
			"summary": {
				"thisTask": "This Task",
				"namePlaceholder": "Task Name",
				"with": "Has these parameters",
				"paramPlaceholder": "Parameters",
				"is": "is"
			}
		}, 
		"locationManager": {
			"title.search": "SEARCH",
			"title": "Location Manager",
			"title.filterApplied": "Filter Applied",
			"title.addLocation": "Add Location",
			"title.loadMore": "LOAD MORE",
			"empty": "No locations match the specified criteria",
			"search":{
				"placeholder": "Search for locations",
				"apply": "APPLY"
			},
			"list":{
				"column.location": "Location",
				"column.ip": "IP / IP Range",
				"placeholder.name": "Name",
				"placeholder.value": "Value",
				"required.name": "Name is required",
				"pattern.name": "Location name cannot contain restricted character tilde(~), slash(/), asterisk(*), dollar sign($), ampersand(&), backslash(\\), or question mark(?).",
				"required.value": "Value is required",
				"pattern.value": "Please enter valid ip/range",
				"ip.pattern": "'^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/([0-9]|[1-2][0-9]|3[0-2]))?$'",
				"delete.success": "Data deleted successfully",
				"bulkDelete.confirm": "Are you sure you want to delete the selected location(s)? This action cannot be undone.",
				"bulkDelete.result": "{{toDelete}} out of the {{size}} selected location{{size>1? 's' :''}} {{deleted>1? 'are': 'is'}} referenced in component(s). In order to delete, remove the reference from respective components",
				"bulkImport.title": "Import Locations",
				"bulkImport.errors.confirm": "The selected file contains errors. Rectify and re-upload the file OR proceed to import? Locations with errors will be skipped.",
				"bulkImport.result": "{{size}} location{{size==1? '' :'s'}} {{size==1? 'is': 'are'}} imported successfully."

			}
		},
		"propertyManager": {
			"title": "Property Manager",
			"title.filterApplied": "Filter Applied",
			"title.addProperty": "Add Property",
			"title.loadMore": "LOAD MORE",
			"empty": "No properties match the specified criteria",
			"search":{
				"title": "SEARCH",
				"placeholder": "Search for properties",
				"type": "Type",
				"dataType": "Data Type",
				"apply": "APPLY"
			},
			"list":{
				"column.entityType": "Entity Type",
				"column.displayName": "Display Name",
				"column.logicalName": "Logical Name",
				"column.dataType": "Data Type",
				"placeholder.entity": "Select entity",
				"placeholder.displayName": "E.g. Property 1",
				"placeholder.logicalName": "E.g. Property_1",
				"placeholder.dataType": "Select data type",
				"required.name": "Name is required",
				"required.value": "Value is required",
				"pattern.value": "Please enter valid ip/range",
				"delete.success": "Data deleted successfully",
				"bulkDelete.confirm": "Are you sure you want to delete the selected property(s)? This action cannot be undone.",
				"bulkDelete.result": "{{toDelete}} out of the {{size}} selected propert{{size>1? 'ies' :'y'}} {{deleted>1? 'are': 'is'}} referenced in component(s). In order to delete, remove the reference from respective components"
			}
		}
	},
	"pdpPlugin": {
        "title": {
            "main": "PDP Plugin Management",
            "add": "Add PDP plugin"
        },
        "action": {
            "addPlugin": "Add Plugin",
            "deletePlugin": "Delete Plugin",
            "deployPlugin": "Deploy Plugin",
            "deactivatePlugin": "Deactivate Plugin"
        },
        "section": {
            "info": "PLUGIN DETAILS",
            "files": "FILES"
        },
        "label": {
            "name": "Plugin name",
            "description": "Description (Optional)",
            "mainJar": "Plugin JAR file",
            "propertiesFile": "Properties file",
            "thirdPartyJars": "Third-party JAR files (Optional)",
			"other": "Other files (Optional)"
        },
        "placeHolder": {
            "name": "A plugin name",
            "description": "A brief description of the PDP plugin",
            "mainJar": "Upload JAR file",
            "propertiesFile": "Upload properties file",
            "thirdPartyJars": "Upload third party JAR files",
			"other": "Other files (Optional)"
        },
        "message": {
            "noData": "No PDP plugin found.",
            "deleteConfirmation": "Are you sure you want to delete the selected item? This action cannot be undone.",
			"added": "The PDP plugin is saved.",
			"modified": "The PDP plugin is saved.",
			"deleted": "The PDP plugin is deleted.",
			"deployed": "The PDP plugin is deployed.",
			"deactivated": "The PDP plugin is deactivated.",
			"resetConfirmation": "Are you sure you want to discard changes and reset the form?",
			"deployConfirmation": "Do you want to proceed with deployment?",
			"deactivateConfirmation": "Are you sure you want to deactivate the plugin?",
			"unavailable": "PDP plugin is not available"
        },
        "validation": {
            "name.required": "The name is mandatory",
            "mainJar.required": "The main jar file is mandatory",
            "propertiesFile.required": "The properties file is mandatory"
        },
        "grammar": {
            "section": {
                "name": "This PDP plugin",
                "mainJar": "Executing",
                "propertiesFile": "With properties file",
                "thirdPartyJars": "Requires third party libraries"
            },
            "placeHolder": {
                "name": "Plugin Name",
                "mainJar": "Plugin Main JAR",
                "propertiesFile": "Plugin Properties File",
                "thirdPartyJars": "Third Party JARS"
            }
		},
		"table.header": {
			"plugin": "Plugin",
			"status": "Status"
		}
        
    },
	"folder.select.placeholder" : "Select Folder"
}
